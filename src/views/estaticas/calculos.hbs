<div class="container-fluid mb-5">
  <div class="row">

    <div class="col-12 col-xl-12 calculos" id="alcancesGiratoria">
      <h1> IIi. ALCANCES GIRATORIAS</h1>
      <div class="uno">

        <p> ZONA DE ESTUDIO <select name="zona" v-model="zona">
            <option value="coruna">A coruña</option>
            <option value="alicante">Alicante</option>
            <option value="almeria">Almeria</option>
            <option value="barcelona">Barcelona</option>
            <option value="cadiz">Cadiz</option>
            <option value="ceuta">Ceuta</option>
            <option value="fuerteventura">Fuerteventura</option>
            <option value="huelva">Huelva</option>
            <option value="ibiza">Ibiza</option>
            <option value="palmas">Las Palma</option>
            <option value="mahon">Mahón</option>
            <option value="malaga">Malaga</option>
            <option value="mallorca">Mallorca</option>
            <option value="santander">Santander</option>
            <option value="sebastian">San Sebastian</option>
            <option value="tenerife">Tenerife</option>
            <option value="valencia">Valencia</option>
            <option value="vigo">Vigo</option>
          </select>
        </p>
        <p> TIEMPO <select name="TA" v-model="TA">
            <option value="TB">Brumoso</option>
            <option value="TM">Medio</option>
            <option value="TC">Bueno</option>
            <option value="T90">90% de los días</option>
            <option value="T70">70% de los días</option>
          </select> <span>\{{getTA}}</span>
        </p>
        <p> ES TODO HORIZONTE <select name="horizonte" v-model="horizonte"> //K2prima
            <option value="" selected>No</option>
            <option value="1">Si</option>
          </select>
        </p>
        <p> Caracteristica: <input type="text" v-model="caracteristica" size="55"></p>
        <div class=" d-flex flex-row justify-content-center">

          <div class="d-flex flex-column justify-content-center ">
            <p v-if="horizonte"> b: <input type="number" v-model="b" size="5"></p>
            <p v-if="horizonte"> L: <input type="number" v-model="L" size="5"></p>
            <p v-if="horizonte"> h2: <input type="number" v-model="h2" size="5"></p>
            <p v-if="horizonte"> h3: <input type="number" v-model="h3" size="5"></p>
            <p v-if="horizonte"> h4: <input type="number" v-model="h4" size="5"></p>

            <p v-if="!horizonte"> a2: <input type="number" v-model="a2" size="5"></p>
            <p> &Theta;: <input type="number" v-model="tita" size="5"></p>
            <p v-if="!horizonte"> a2_I: <input type="number" v-model="a2_I" size="5"></p>
            <p v-if="!horizonte"> &Theta;I: <input type="number" v-model="titaI" size="5"></p>

            <p v-if="horizonte"> &Theta;1: <input type="number" v-model="tita1" size="5"></p>
            <p v-if="horizonte"> &Theta;2: <input type="number" v-model="tita2" size="5"></p>
            <p v-if="horizonte"> &Theta;3: <input type="number" v-model="tita3" size="5"></p>
            <p v-if="horizonte"> &Theta;4: <input type="number" v-model="tita4" size="5"></p>
            <p v-if="horizonte"> K: <input type="number" v-model="K" size="5"></p>
            <p v-if="horizonte"> K': <input type="number" v-model="Kprima" size="5"></p>
            <p v-if="horizonte"> K": <select name="K2prima" v-model="K2prima">
                <option value="0.8" selected>Catadioptricos inferiores no retrasados</option>
                <option value="1">Catadioptricos inferiores retrasados</option>
              </select>
            </p>
            <p v-if="horizonte"> tau: <input type="number" v-model="Tau" size="5"></p>


            <p v-if="!horizonte"> a3_I: <input type="number" v-model="a3_I" size="5"></p>
            <p v-if="!horizonte"> c3_I: <input type="number" v-model="c3_I" size="5"></p>
            <p v-if="!horizonte"> a3_II: <input type="number" v-model="a3_II" size="5"></p>
            <p v-if="!horizonte"> c3_II: <input type="number" v-model="c3_II" size="5"></p>
            <p v-if="!horizonte"> L: <input type="number" v-model="L" size="5"></p>
          </div>
          <div class="d-flex flex-column justify-content-center ">
            <p v-if="!horizonte"> Pf (ad): <input type="number" v-model="Pf" size="5"></p>
            <p v-if="!horizonte"> b (cm): <input type="number" v-model="b" size="5"></p>
            <p v-if="!horizonte"> f (cm): <input type="number" v-model="f" size="5"></p>
            <p v-if="!horizonte"> g (cm): <input type="number" v-model="g" size="5"></p>
            <p v-if="!horizonte"> n (rpm): <input type="number" v-model="n" size="5"></p>
            <p v-if="!horizonte"> T (seg): <input type="number" v-model="T" size="5"></p>
            <p v-if="!horizonte"> h (cm): <input type="number" v-model="h" size="5"></p>
          </div>
          <div class="d-flex flex-column justify-content-center ">
            <p> F3 (ad): <input type="number" v-model="F3" size="5"></p>
            <p> F4 (ad): <input type="number" v-model="F4" size="5"></p>
            <p> F5 (ad): <input type="number" v-model="F5" size="5"></p>
            <p v-if="horizonte"> P (w): <input type="number" v-model="P" size="5"></p>
            <p v-if="horizonte"> V (volt): <input type="number" v-model="V" size="5"></p>
            <p v-if="horizonte"> Tipo Corriente (a/c): <input type="text" v-model="TC" size="5"></p>
            <p v-if="horizonte"> Rc (ohm): <input type="number" v-model="Rc" size="5"></p>
            <p> H (m): <input type="number" v-model="H" size="5"></p>
            <p v-if="horizonte"> f (cm): <input type="number" v-model="f" size="5"></p>
            <p v-if="horizonte"> h (cm): <input type="number" v-model="h" size="5"></p>
          </div>
          <div class="d-flex flex-column justify-content-center " v-if="!horizonte">
            <h4>VALORES INTERMEDIOS </h4>
            {{!-- <p> c2 (ad): <input type="number" v-model="c2" size="5"></p> --}}
            <p> c2 (ad): \{{c2}}</p>
            <p> c2_I (ad): \{{c2_I}}</p>
            <p> L1 (cd/cm2): \{{L1}} </p>
            <p> Tau0: \{{tau0}}</p>
            <p> F1 (ad): \{{F1}} </p>
            <p> F2 (ad): \{{F2}} </p>
            <p> X (ad): \{{X}} </p>
            <p> Tau: \{{tau}}</p>
            <p> Div vertical: \{{dv}}</p>
          </div>
          <div class="d-flex flex-column justify-content-center " v-if="horizonte">
            <h4>VALORES INTERMEDIOS </h4>
            <p> L2 (cd/cm2): \{{L2}}</p>
            <p> L3 (cd/cm2): \{{L3}} </p>
            <p> L4 (cd/cm2): \{{L4}} </p>
            <p> K2 (ad): \{{K2}}</p>
            <p> K3 (ad): \{{K3}}</p>
            <p> K4 (ad): \{{K4}}</p>
            <p> F1 (ad): \{{F1}} </p>
            <p> A (amp): \{{A}} </p>
            <p> R1 (ohm): \{{R1}} </p>
            <p> R (ad): \{{R}} </p>
            <p> F (ad): \{{F}} </p>

            <p> &Delta;&tau;: \{{tau0}}</p>
            <p> &Delta;&tau; corregido: \{{taucorregido}}</p>
            <p> Div vertical: \{{dv}}</p>
          </div>

          <div class="d-flex flex-column justify-content-center ">
            <p> INTENSIDAD DE ESTACIONARIA: <span class="resultado"> \{{Iestacionaria}} </span>Cd</p>
            <p> INTENSIDAD DE EFICAZ: <span class="resultado"> \{{Ieficaz}} </span>Cd</p>
            <p> INTENSIDAD DE CALCULO: <span class="resultado"> \{{Icalculo}} </span>Cd</p>
          </div>
          <div class="d-flex flex-column justify-content-center ">
            <p> Alcance Luminoso nominal calculado en TC: <span class="resultado">
                \{{alcance_luminoso_nominal_calculado}} </span> mn</p>
            <p> Alcance geográfico a una altura del ojo del observador (m): <input type="number" v-model="altura_ojo"
                size="5"> <span class="resultado"> \{{alcance_geografico}}</span> mn</p>

          </div>

        </div>

      </div>
      <i> Calculos basados en la recomendacion E-200 series IALA</i>
    </div>

    <div class="col-12 col-xl-5 calculos" id="coordenadas">
      <h1> I. COORDENADAS</h1>

      <div class="uno">
        <h3>DECIMAL A WGS-84</h3>
        <p>Coordenada en decimal <input type="text" v-model="decimal1" placeholder="GG.mmmmmmm"></p>
        <p class="resultado">\{{resultado1}}</p>
        <p>\{{error1}}</p>
        <p v-if="bul==true">Errorcito bul</p>
      </div>

      <div class="dos">
        <h3>WGS-84 A DECIMAL</h3>
        <p>Coordenada en wgs-84 <input type="text" v-model="wgs2" placeholder="GGº MM.mmm'"></p>
        <p class="resultado">\{{resultado2}}</p>
        <p>\{{error2}}</p>
      </div>

      <div class="tres">
        <h3>UTM A WGS-84</h3>
        <p>Coordenada en UTM <input type="text" v-model="wgs3" placeholder="GG° MM' SS.sss&quot; N"></p>
        <p class="resultado">\{{resultado3}}</p>
        <p>\{{error3}}</p>
      </div>
      <i> Conversiones de coordenadas</i>
    </div>
    <div class="col-12 col-xl-6 calculos" id="alcances">
      <h1> II. ALCANCES </h1>
      <div class="uno">
        <p> ALCANCE LUMINOSO MINIMO: <input type="number" placeholder="millas nauticas" step="0.1" v-model="alcance"
            size="2"> Millas Nauticas </p>

        <p> ZONA DE ESTUDIO <select name="visibilidad" v-model="visibilidad">
            <option value="8.172">Mediterraneo-Baleares</option>
            <option value="6.246">Cantabrico-Galia</option>
            <option value="7.469">Huelva-Cadiz</option>
            <option value="6.839">Sevilla</option>
            <option value="5.76">Ceuta</option>
            <option value="11.699">Canarias</option>
          </select>
          Visibilidad= <span>\{{visibilidad}}</span>
        </p>

        <p> FUENTE AZUL: <select name="azul" v-model="azul">
            <option value="si">Si</option>
            <option value="no">No</option>
          </select> </p>

        <p> TIPO DE SEÑAL: <select name="tipo" v-model="tipo">
            <option value="Nocturna">Nocturna</option>
            <option value="Diurna">Diurna</option>
            <option value="Enfilacion">Enfilacion</option>
          </select> a=<span id="a"> \{{a}} </span> </p>
        <p> LUMINANCIA DE FONDO: <select name="fondo" v-model="fondo">
            <option value="Ninguna">Ninguna</option>
            <option value="Poca">Poca</option>
            <option value="Considerable">Considerable</option>
          </select> Umbral= <span> \{{umbral}}</span> </p>
        <p> DURACION DEL MENOR DESTELLO: <input type="number" v-model="destello" step="0.05" value="0.5" size="4"> </p>

        <p> FACTOR DE SERVICIO: <input type="text" v-model="coef1" size="1"></p>
        <p> FACTOR DE ACRISTALAMIENTO: <input type="text" v-model="coef2" size="1"></p>
        <p> FACTOR DE LUMINANCIA DE FONDO: <input type="text" v-model="coef3" size="1"></p>
      </div>

      <div class="tres">
        <p> INTENSIDAD DE CALCULO: <span class="resultado"> \{{Icalculo}} </span> Cd </p>
        <p> INTENSIDAD DE EFICAZ:<span class="resultado">\{{Ieficaz}}</span> Cd</p>
        <p> INTENSIDAD DE ESTACIONARIA:<span class="resultado"> \{{Iestacionaria}}</span> Cd</p>
      </div>
      <i> Calculos basados en la recomendacion E-200 series IALA</i>
    </div>
  </div>
  <div class="row text-center d-none d-xl-block">
    <div class="col-11 mx-auto">
      <a href="https://www.iala-aism.org/" target="_blank">
        <img src="/img/iala-mbsback.jpg" class="rounded" alt="aaaa">
      </a>
    </div>
  </div>
</div>

<script>

  var app = new Vue({
    el: "#alcances",
    data: {
      alcance: 2.3,
      visibilidad: 8.172,
      tipo: "Nocturna",
      fondo: "Poca",
      umbral1: null,
      destello: "0.5",
      coef1: "0.7",
      coef2: "1",
      coef3: "1",
      azul: "no",
    },
    mounted: function () {
      this.calcularAlcance();
    },
    filters: {
      redondeo2: function (value) {
        if (value != null) return value.toFixed(2);
      },
      redondeo6: function (value) {
        if (value != null) return value.toFixed(6);
      },
    },
    methods: {
      calcularAlcance: function () {
        this.coef1 = parseFloat(this.coef1);
        this.coef2 = parseFloat(this.coef2);
        this.coef3 = parseFloat(this.coef3);
        this.visibilidad = parseFloat(this.visibilidad);
        if (this.tipo == 3) a = 0.2;
        else a = 0.1;

        if (isNaN(this.alcance)) alert("calcularAlcance no es un numero");
        else this.alcance = parseFloat(this.alcance);

        if (isNaN(this.destello)) alert("introduzca como destello un numero");
        else this.destello = parseFloat(this.destello);

        switch (this.tipo) {
          case "Nocturna":
            switch (this.fondo) {
              case "Ninguna":
                this.umbral1 = 0.0000002;
                break;
              case "Poca":
                this.umbral1 = 0.000002;
                break;
              case "Considerable":
                this.umbral1 = 0.00002;
                break;
            }
            break;

          case "Diurna":
            this.umbral1 = 0.001;
            break;

          case "Enfilacion":
            switch (this.visibilidad) {
              case 6.246:
                this.visibilidad = 3.888;
                break;
              case 7.469:
                this.visibilidad = 5.22;
                break;
              case 6.839:
                this.visibilidad = 4.68;
                break;
              case 5.76:
                this.visibilidad = 3.78;
                break;
              case 8.172:
                this.visibilidad = 5.775;
                break;
              case 11.699:
                this.visibilidad = 8.549;
                break;

            }

            switch (this.fondo) {
              case "Ninguna":
                this.umbral1 = 0.000001;

                break;
              case "Poca":
                this.umbral1 = 0.00001;
                break;
              case "Considerable":
                this.umbral1 = 0.0001;
                break;
            }
            break;
        }
      },
    },
    computed: {
      umbral: function () {
        switch (this.tipo) {
          case "Nocturna":
            switch (this.fondo) {
              case "Ninguna":
                return 0.0000002;
                break;
              case "Poca":
                return 0.000002;
                break;
              case "Considerable":
                return 0.00002;
                break;
            }
            break;

          case "Diurna":
            return 0.001;
            break;

          case "Enfilacion":
            switch (this.fondo) {
              case "Ninguna":
                return 0.000001;

                break;
              case "Poca":
                return 0.00001;
                break;
              case "Considerable":
                return 0.0001;
                break;
            }
            break;
        }
      },
      a: function () {
        if (this.azul == "si" && this.tipo == "Enfilacion") return 0.2;
        else return 0.1;
      },
      Icalculo: function () {
        return (
          3430000 *
          this.alcance *
          this.alcance *
          this.umbral *
          Math.pow(0.05, (-1 * this.alcance) / this.visibilidad)
        ).toFixed(1);
      },
      Ieficaz: function () {
        return (this.Icalculo / this.coef1 / this.coef2 / this.coef3).toFixed(1);
      },
      Iestacionaria: function () {
        return (
          (this.Ieficaz * (parseFloat(this.destello) + this.a)) /
          this.destello
        ).toFixed(1);
      },
    },
  });

  var app2 = new Vue({
    el: "#coordenadas",
    data: {
      decimal1: "39.65525",
      wgs2: "39º 55.345", //GGº MM.mmm'
      wgs3: "39º 52' 25\" N", //GG° MM' SS.sss&quot; N"
      decimal11: null,
      error1: "no error",
      error2: null,
      error3: null,
      bul: false,
      caracteristica: "",
      destellos: "",
      destellosAcum: "",
    },

    filters: {
      redondeo2: function (value) {
        if (value != null) return value.toFixed(2);
      },
      redondeo6: function (value) {
        if (value != null) return value.toFixed(6);
      },
    },
    methods: {
      dormir: function (milliseconds) {
        var start = new Date().getTime();
        for (var i = 0; i < 1e7; i++) {
          if (new Date().getTime() - start > milliseconds) {
            break;
          }
        }
      },
    },
    computed: {
      resultado1: function () {
        this.bul = "false";
        this.error1 = "";
        this.decimal11 = parseFloat(this.decimal1);
        if (isNaN(this.decimal1)) {
          this.error1 = "Introduzca grados en formato decimal GG.gggg";
          this.bul = "true";
        } else {
          var decarray = this.decimal1.split(".");
          if (decarray.length == 2)
            var decimales = parseFloat("0." + decarray[1]) * 60;
          else this.error1 = "Introduzca gradosen formato decimal GG.gggg";
        }
        return decarray[0] + "º " + decimales.toFixed(3) + "'";
      },
      resultado2: function () {
        this.error2 = "";
        var utmarray = this.wgs2.split(" ");

        var gradosar = utmarray[0].split("º");
        var minsar = utmarray[1].split(".");
        var milar = minsar[1].split("'");
        if (isNaN(gradosar[0]) || isNaN(minsar[0]) || isNaN(milar[0]))
          this.error2 = "Introduzca grados y minutos GGº MM.mmm";
        else {
          var grad = parseFloat(gradosar[0]);
          var min = parseFloat(minsar[0]);
          var mil = parseFloat(milar[0]);
        }

        var decimal = grad + (min + mil / 1000) / 60;

        return decimal.toFixed(6);
      },
      resultado3: function () {
        this.error3 = "";
        var utm = this.wgs3;
        var utmarray = utm.split(/\º|\'|\"|\°/g);

        if (isNaN(utmarray[0]) || isNaN(utmarray[1]) || isNaN(utmarray[2]))
          this.error3 = "Introduzca grados minutos y segundos GGº MM' ss\"";
        else {
          var grados = parseFloat(utmarray[0]);
          var min = parseFloat(utmarray[1]);
          var seg = parseFloat(utmarray[2]);
        }
        var minf = min + seg / 60;
        minf = minf.toFixed(3);
        var decimal = grados + "º " + minf + "'";

        return decimal;
      },
    },
    mounted: function () { },
  });

  var app3 = new Vue({
    el: "#alcancesGiratoria",
    data: {
      zona: "huelva",
      TA: "TB",
      alcance: 2.3,
      visibilidad: 8.172,
      horizonte: "",
      tipo: "Nocturna",
      fondo: "Poca",
      umbral1: null,
      destello: "0.5",
      coef1: "0.7",
      coef2: "1",
      coef3: "1",
      azul: "no",

      alcance_luminoso_nominal: 25,
      alcance_requerido_CI: 19.3,
      alcance_requerido_CII: 15.2,
      caracteristica: "L0.200 Oc2.900 L0.200 Oc8.600 L0.200 Oc2.900 L0.200 Oc2.900 L0.200 Oc8.600 L0.200 Oc2.900 L0.200 Oc2.900 L0.200 Oc2.900 L0.200 Oc8.600",
      apariencia_origen: " GpD(2+4)",
      horizonte: false,
      a2: 914,
      tita: 34,
      a2_I: 563,
      titaI: 19,
      h2: 59,
      h3: 59,
      h4: 26.5,

      tita1: 31,
      tita2: 80,
      tita3: 31,
      tita4: 62,
      K: 1,
      Kprima: 1,
      K2prima: 1,
      P: 150,
      V: 24,
      Tc: 'c',
      Rc: 0.150,
      Tau: 0.8,
      a3_I: 853,
      c3_I: 0.85,
      a3_II: 1168,
      c3_II: 0.85,
      L: 650,
      Pf: 0.5,
      b: 2,
      f: 37,
      g: 72,
      n: 2,
      T: 30,
      h: 4,
      F3: 0.85,
      F4: 1,
      F5: 3,
      H: 50,

      altura_ojo: 4,
      apariencia_limite: " L0.194 Oc3.806 L0.194 Oc3.806 L0.194 Oc11.806",
      distancia_vision_0: 350,
      distancia_vision_4: 300,
      distancia_vision_16: 150,
      altura_Hd_ojo_a_d2: -137.0,
      //dv: 9.1,

      inconveniente: [
        "Alcance nominal insuficiente según el que consta en el Libro de Faros del Instituto Hidrográfico de la Marina",
        "Alcance nominal insuficiente según en el que consta en el Plan de Señales Maritimas de 1985-1989",
        "Alcance luminoso insuficiente para cumplir el Criterio I del Plan de Señales Marítimas 1985-1989 (cobertura en la banda costera de veinte millas náuticas en tiempo medio local).",
        "Alcance luminoso insuficiente para cumplir el Criterio II del Plan de Señales Marítimas 1985-1989 (cobertura en la banda costera de doce millas náuticas en tiempo brumoso local).",
        "Alcance geográfico insuficiente para cumploir el Criterio I del Plan de Señales Maritimas 1985-1989 (cobertura en la banda costera de veinte millas náuticas para 16m de altura).",
        "Alcance geográfico insuficiente para cumploir el Criterio II del Plan de Señales Maritimas 1985-1989 (cobertura en la banda costera de doce millaspara 4m de altura).",
        "Destelo aislado excesivamente corto para facilitar la distinción (se ha estimado así cuando su duración inferior a 0,1s)",
        "Distancia de perceción del haz excesivamente larga (superior a 1/4mn en balizas y 1/2mn en faros para altura del ojo del observador a 4m)",
        "Deslumbramiento en la zona de navegación necesaria para una altura del ojo del observador a 16m",
        "No cumpl el limite del punto 8 del British Standar 942:1949 (divergencia del haz 1/50 o bien de 1.15º)",
        "Apariencia cualitativa inadaptada a la del Plan de Señales Marítimas 1985-1989",
      ],
      transmisionesAtmosfericas: [
        { "observatorio": "almeria", "TB": 8.28, "TM": 20.15, "TC": 33.45, "T90": 7.469, "T70": 5.220 },
        { "observatorio": "alicante", "TB": 13.80, "TM": 23.21, "TC": 36.89, "T90": 8.172, "T70": 5.775 },
        { "observatorio": "barcelona", "TB": 3.14, "TM": 11.80, "TC": 50.74, "T90": 8.172, "T70": 5.775 },
        { "observatorio": "sebastian", "TB": 4.16, "TM": 19.29, "TC": 36.27, "T90": 3.888, "T70": 6.246 },
        { "observatorio": "santander", "TB": 2.95, "TM": 8.11, "TC": 22.28, "T90": 3.888, "T70": 6.246 },
        { "observatorio": "coruna", "TB": 5.63, "TM": 12.21, "TC": 20.78, "T90": 3.888, "T70": 6.246 },
        { "observatorio": "vigo", "TB": 5.43, "TM": 18.66, "TC": 22.77, "T90": 3.888, "T70": 6.246 },
        { "observatorio": "cadiz", "TB": 15.7, "TM": 21.28, "TC": 25.90, "T90": 7.469, "T70": 5.220 },
        { "observatorio": "ceuta", "TB": 7.86, "TM": 20.94, "TC": 31.66, "T90": 5.760, "T70": 3.780 },
        { "observatorio": "malaga", "TB": 5.98, "TM": 17.74, "TC": 28.43, "T90": 7.469, "T70": 5.220 },
        { "observatorio": "mahon", "TB": 8.39, "TM": 17.89, "TC": 32.65, "T90": 8.172, "T70": 5.775 },
        { "observatorio": "mallorca", "TB": 10.65, "TM": 20.52, "TC": 31.42, "T90": 8.172, "T70": 5.775 },
        { "observatorio": "ibiza", "TB": 12.01, "TM": 25.44, "TC": 39.09, "T90": 8.172, "T70": 5.775 },
        { "observatorio": "tenerife", "TB": 20.13, "TM": 24.99, "TC": 39.33, "T90": 11.699, "T70": 8.549 },
        { "observatorio": "palmas", "TB": 8.48, "TM": 21.91, "TC": 41.12, "T90": 11.699, "T70": 8.549 },
        { "observatorio": "fuerteventura", "TB": 12.10, "TM": 19.68, "TC": 31.15, "T90": 11.699, "T70": 8.549 },
        { "observatorio": "huelva", "TB": 4.08, "TM": 10.35, "TC": 14.11, "T90": 7.469, "T70": 5.22 },
        { "observatorio": "valencia", "TB": 4.26, "TM": 10.77, "TC": 25.65, "T90": 8.172, "T70": 5.775 },

        { "observatorio": "prueba", "TB": 28, "TM": 15, "TC": 45, "T90": 7, "T70": 5 },
      ],
    },
    mounted: function () {
    },
    filters: {
      redondeo2: function (value) {
        if (value != null) return value.toFixed(2);
      },
      redondeo6: function (value) {
        if (value != null) return value.toFixed(6);
      },
    },
    methods: {
      caracteristicaToArray: function () {
        let destellos;
        let destellosAcum;
        let caracteristicaMod;
        let repeticiones, caracteristica;
        caracteristica = this.caracteristica.toLowerCase();
        caracteristica = caracteristica.replace(/\ |\(|\[|\[|\)|\]\+/g, '').replace(/,/g, '.').replace(/oc/g, "l").replace(/o/g, "l");
        //console.log(caracteristica);

        //Tratamos las posibles repeticiones
        //Si hay X
        if (caracteristica.search("x") != -1) {
          repeticiones = caracteristica.charAt(caracteristica.search("x") + 1); //el siguiente digito al simbolo multiplicacion 'x' es el numero de repeticiones
          let trimado = 'x' + repeticiones;
          caract = caracteristica.split(trimado);
          caract[0] = caract[0].repeat(repeticiones);
          caracteristicaMod = caract[0].concat(caract[1]);
        } else
          caracteristicaMod = caracteristica;
        //console.log(caracteristicaMod)


        //Doy por hecho que siempre se alternan L y O empezando por L
        caracteristicaMod = caracteristicaMod.replace('l', '');
        //quito la primera L por no generar un item de array al usar el split
        destellos = caracteristicaMod.split('l');
        destellosAcum = new Array(destellos.length);
        destellosAcum.fill(0, 0, destellos.length);

        //Lo parseo a float
        for (let i = 0; i < destellos.length; i++) {
          destellos[i] = parseFloat(destellos[i]);
        }
        return destellos;
      },
      minimoDestello: function (destellos) {
        let min = 1000;
        for (var i = 0; i < destellos.length; i += 2) {
          if (destellos[i] < min)
            min = destellos[i];
        }
        return min;
      },
      obtenerTA: function (observatorio, TA) {
        var item = this.transmisionesAtmosfericas.find((element) => element.observatorio == observatorio);
        switch (TA) {
          case 'TB':
            return item.TB;
          case 'TM':
            return item.TM;
          case 'TC':
            return item.TC;
          case 'T90':
            return item.T90;
          case 'T70':
            return item.T70;
          default:
            return 0;
        }
        //return item;
      },
      getBaseLog: function (x, y) {
        return Math.log(y) / Math.log(x);
      }
    },
    computed: {
      c2: function () {
        //Si angulo>30 y=−0.01167x+1.0851
        if (this.tita >= 30) {
          return (-0.01167 * this.tita + 1.0851).toFixed(4);
        } else if (this.tita >= 20) {
          return (-0.0075 * this.tita + 0.96).toFixed(4);
        } else {
          return ((-1 / 200 * this.tita ** 2 + 13 / 10 * this.tita + 0.888) / (1000)).toFixed(4);
        }
      },
      c2_I: function () {
        //TODO:
        return (0.74);
      },
      K2: function () {
        //Si angulo>30 y=−0.01167x+1.0851
        if (this.tita >= 30) {
          return (-0.01167 * this.tita + 1.0851).toFixed(4);
        } else if (this.tita >= 20) {
          return (-0.0075 * this.tita + 0.96).toFixed(4);
        } else {
          return ((-1 / 200 * this.tita ** 2 + 13 / 10 * this.tita + 0.888) / (1000)).toFixed(4);
        }
      },
      // f(90,60)=200 f(80,73)=200
      // f(90,53)=250 f(75,70)=250 
      // f(90,44)=300 f(70,66)=300 
      // f(90,34)=350 f(75,65)=0350 
      // f(90,22)=400 f(65,58)=400
      // f(90,7)=450 f(65,35)=450 f(60,55)=450
      // f(80,0)=500 f(70,33)=500 f(55,52)=500
      // f(77,0)=550 f(70,20)=550 f(60,35)=550 f(50,47)=550 
      // f(70,0)=600 f(62,20)=600 f(57,25)=600 f(47,40)=600 f(45,42)=600
      // f(60,0)=650 f(55,13)=650 f(50,22)=650 f(45,30)=650 f(40,35)=650
      // f(47,0)=700 f(44,10)=700 f(38,20)=700 f(35,25)=700 f(30,30)=700
      //TODO: PUES ESTA MAL LA ECUACION 
      // chatGPT para K3 y K4 f(x,y)=−0.05x^2 +0.2xy−0.15y^2 +17.75x−1.75y+187.5

      //0.00158730159xy−0.0173015873x+0.0141269841y+0.146190476
      K3: function () {
        let factorCorreccion = 0.04 / 55 * 47;
        return ((-0.05 * this.tita2 ** 2 + 0.2 * this.tita1 * this.tita2 - 0.15 * this.tita1 ** 2 + 17.75 * this.tita2 - 1.75 * this.tita1 + 187.5) / 100 * factorCorreccion).toFixed(3);
      },
      K4: function () {
        let factorCorreccion = 0.04;
        return ((-0.05 * this.tita4 ** 2 + 0.2 * this.tita3 * this.tita4 - 0.15 * this.tita3 ** 2 + 17.75 * this.tita4 - 1.75 * this.tita3 + 187.5) / 100 * factorCorreccion).toFixed(3);
      },
      A: function () {
        //TODO:
        return (this.P / this.V);
      },

      L1: function () {
        //TODO:
        return (1689.44);
      },
      tau0: function () {
        //console.log(this.caracteristicaToArray(this.caracteristica));
        return (this.minimoDestello(this.caracteristicaToArray(this.caracteristica)));
        //return (9.549 * this.b / this.f / 60 * this.T).toFixed(3);
      },
      tau: function () {
        //TODO:
        //return (0.024);
        return (this.tau0 * this.F2).toFixed(3);
      },
      taucorregido: function () {
        //reta 90%  figura III.26
        return (this.A * this.F2).toFixed(3);
      },
      F1: function () {
        //TODO:
        return (0.16);
      },
      F2: function () {
        //TODO:
        return (0.93);
      },
      X: function () {
        //TODO:
        return (0.581);
      },
      TC: function () {
        //TODO:
        return (0.74);
      },
      L2: function () {
        //TODO:
        return (0.74);
      },
      L3: function () {
        //TODO:
        return (0.74);
      },
      L4: function () {
        //TODO:
        return (0.74);
      },
      R1: function () {
        //TODO:
        return (0.74);
      },
      R: function () {
        //TODO:
        return (0.74);
      },
      F: function () {
        //TODO:
        return (0.74);
      },
      getTA: function () {
        return this.obtenerTA(this.zona, this.TA);
      },
      alcance_luminoso_nominal_calculado: function () {
        //console.log((this.obtenerTA(this.zona, this.TA)));
        //NEWTON RAPSHON!!! con poca luminancia de fondo 0.000002
        var D = this.alcance_luminoso_nominal, fx, fprimax, vis;
        vis = 9;
        vis = this.obtenerTA(this.zona, this.TA);
        //console.log(vis);
        if (vis > 1) {

          do {
            //fx = 0.686 * D ** 2 - this.Icalculo * vis ** D;
            fx = this.Icalculo - (3430000 * 2 * 10 ** -6) * (D ** 2) * (0.05 ** -(D / vis));
            //fprimax = 2 * 0.686 * D - (this.Icalculo * vis ** D) * this.getBaseLog(Math.E,vis);
            fprimax = -[((0.05 ** -(D / vis)) * 2 * 3430000 * 2 * 10 ** -6 * D) + ((3430000 * 2 * 10 ** -6) * (D ** 2) * this.getBaseLog(Math.E, 0.05) * (0.05 ** -(D / vis)) * (-1 / vis))]
            D = D - fx / fprimax;
            console.log(fx + " " + fprimax + " " + fx / fprimax + " " + D);
          } while (fx / fprimax > 0.01);
        }

        return D.toFixed(2);

      },
      dv: function () {
        return (2 * (Math.atan(this.h / 2 / this.f)) * 180 / Math.PI).toFixed(2);
      },
      alcance_geografico: function () {
        return (2.08 * (Math.sqrt(this.H) + Math.sqrt(this.altura_ojo))).toFixed(2);

      },
      Iestacionaria: function () {
        if (this.horizonte) {
          return (this.K * [this.b * (this.h2 * this.L2 * this.K2 + this.h3 * this.L3 * this.K3 + this.K2prima * this.h4 * this.L4 * this.K4)]).toFixed(2);
        } else {
          return ((this.L1 * (this.a2 * this.c2 + this.a2_I * this.c2_I + this.a3_I * this.Pf * this.c3_I + this.a3_II * this.Pf * this.c3_II))).toFixed(2);
        }
      },
      Ieficaz: function () {
        return (
          (this.Iestacionaria * (this.F1))
        ).toFixed(2);
      },
      Icalculo: function () {
        return (
          (this.Ieficaz * (this.F3 * this.F4 / this.F5))
        ).toFixed(2);
      },
    },
  });

</script>