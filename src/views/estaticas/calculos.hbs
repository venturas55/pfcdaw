<div class="container-fluid mb-5">
  <div class="row">
    <div class="col-11 calculos mx-auto" id="alcancesGiratoria">
      <h1> III. ALCANCES GIRATORIAS</h1>
      <div class="uno">

        <p> ZONA DE ESTUDIO <select name="zona" v-model="zona">
            <option value="coruna">A coruña</option>
            <option value="alicante">Alicante</option>
            <option value="almeria">Almeria</option>
            <option value="barcelona">Barcelona</option>
            <option value="cadiz">Cadiz</option>
            <option value="ceuta">Ceuta</option>
            <option value="fuerteventura">Fuerteventura</option>
            <option value="huelva">Huelva</option>
            <option value="ibiza">Ibiza</option>
            <option value="palmas">Las Palma</option>
            <option value="mahon">Mahón</option>
            <option value="malaga">Malaga</option>
            <option value="mallorca">Mallorca</option>
            <option value="santander">Santander</option>
            <option value="sebastian">San Sebastian</option>
            <option value="tenerife">Tenerife</option>
            <option value="valencia">Valencia</option>
            <option value="vigo">Vigo</option>
          </select>
        </p>
        <p> TIEMPO <select name="TA" v-model="TA">
            <option value="TB">Brumoso</option>
            <option value="TM">Medio</option>
            <option value="TC">Bueno</option>
            <option value="T90">90% de los días</option>
            <option value="T70">70% de los días</option>
          </select> <span>\{{getTA}}</span>
        </p>
        <p> ES TODO HORIZONTE <select name="horizonte" v-model="horizonte"> //K2prima
            <option value="" selected>No</option>
            <option value="1">Si</option>
          </select>
        </p>
        <p> Caracteristica: <input type="text" v-model="caracteristica" size="55"></p>

        <div class=" d-flex flex-row justify-content-center">
          <div class="d-flex flex-column justify-content-center ">
            <p v-if="horizonte"> b: <input type="number" v-model="b" class="w-50"></p>
            <p v-if="horizonte"> L: <input type="number" v-model="L" class="w-50"></p>
            <p v-if="horizonte"> h2: <input type="number" v-model="h2" class="w-50"></p>
            <p v-if="horizonte"> h3: <input type="number" v-model="h3" class="w-50"></p>
            <p v-if="horizonte"> h4: <input type="number" v-model="h4" class="w-50"></p>

            <p v-if="!horizonte"> a2: <input type="number" v-model="a2" class="w-50"></p>
            <p> &Theta;: <input type="number" v-model="tita" class="w-50"></p>
            <p v-if="!horizonte"> a2_I: <input type="number" v-model="a2_I" class="w-50"></p>
            <p v-if="!horizonte"> &Theta;I: <input type="number" v-model="titaI" class="w-50"></p>

            <p v-if="horizonte"> &Theta;1: <input type="number" v-model="tita1" class="w-50"></p>
            <p v-if="horizonte"> &Theta;2: <input type="number" v-model="tita2" class="w-50"></p>
            <p v-if="horizonte"> &Theta;3: <input type="number" v-model="tita3" class="w-50"></p>
            <p v-if="horizonte"> &Theta;4: <input type="number" v-model="tita4" class="w-50"></p>
            <p v-if="horizonte"> K: <input type="number" v-model="K" class="w-50"></p>
            <p v-if="horizonte"> K': <input type="number" v-model="Kprima" class="w-50"></p>
            <p v-if="horizonte"> K": <select name="K2prima" v-model="K2prima">
                <option value="0.8" selected>Catadioptricos inferiores no retrasados</option>
                <option value="1">Catadioptricos inferiores retrasados</option>
              </select>
            </p>
            <p v-if="horizonte"> tau: <input type="number" v-model="Tau" class="w-50"></p>


            <p v-if="!horizonte"> a3_I: <input type="number" v-model="a3_I" class="w-50"></p>
            <p v-if="!horizonte"> c3_I: <input type="number" v-model="c3_I" class="w-50"></p>
            <p v-if="!horizonte"> a3_II: <input type="number" v-model="a3_II" class="w-50"></p>
            <p v-if="!horizonte"> c3_II: <input type="number" v-model="c3_II" class="w-50"></p>
            <p v-if="!horizonte"> L: <input type="number" v-model="L" class="w-50"></p>
          </div>
          <div class="d-flex flex-column justify-content-center ">
            <p v-if="!horizonte"> Pf (ad): <input type="number" v-model="Pf" class="w-50"></p>
            <p v-if="!horizonte"> b (cm): <input type="number" v-model="b" class="w-50"></p>
            <p v-if="!horizonte"> f (cm): <input type="number" v-model="f" class="w-50"></p>
            <p v-if="!horizonte"> g (cm): <input type="number" v-model="g" class="w-50"></p>
            <p v-if="!horizonte"> n (rpm): <input type="number" v-model="n" class="w-50"></p>
            <p v-if="!horizonte"> T (seg): <input type="number" v-model="T" class="w-50"></p>
            <p v-if="!horizonte"> h (cm): <input type="number" v-model="h" class="w-50"></p>
          </div>
          <div class="d-flex flex-column justify-content-center ">
            <p> F3 (ad): <input type="number" v-model="F3" class="w-50"></p>
            <p> F4 (ad): <input type="number" v-model="F4" class="w-50"></p>
            <p> F5 (ad): <input type="number" v-model="F5" class="w-50"></p>
            <p v-if="horizonte"> P (w): <input type="number" v-model="P" class="w-50"></p>
            <p v-if="horizonte"> V (volt): <input type="number" v-model="V" class="w-50"></p>
            <p v-if="horizonte"> Tipo Corriente (a/c): <input type="text" v-model="TC" class="w-50"></p>
            <p v-if="horizonte"> Rc (ohm): <input type="number" v-model="Rc" class="w-50"></p>
            <p> H (m): <input type="number" v-model="H" class="w-50"></p>
            <p v-if="horizonte"> f (cm): <input type="number" v-model="f" class="w-50"></p>
            <p v-if="horizonte"> h (cm): <input type="number" v-model="h" class="w-50"></p>
          </div>
          <div class="d-flex flex-column justify-content-center " v-if="!horizonte">
            <h4>VALORES INTERMEDIOS </h4>
            {{!-- <p> c2 (ad): <input type="number" v-model="c2" class="w-50"></p> --}}
            <p> c2 (ad): \{{c2}}</p>
            <p> c2_I (ad): \{{c2_I}}</p>
            <p> L1 (cd/cm2): \{{L1}} </p>
            <p> Tau0: \{{tau0}}</p>
            <p> F1 (ad): \{{F1}} </p>
            <p> F2 (ad): \{{F2}} </p>
            <p> X (ad): \{{X}} </p>
            <p> Tau: \{{tau}}</p>
            <p> Div vertical: \{{dv}}</p>
          </div>
          <div class="d-flex flex-column justify-content-center " v-if="horizonte">
            <h4>VALORES INTERMEDIOS </h4>
            <p> L2 (cd/cm2): \{{L2}}</p>
            <p> L3 (cd/cm2): \{{L3}} </p>
            <p> L4 (cd/cm2): \{{L4}} </p>
            <p> K2 (ad): \{{K2}}</p>
            <p> K3 (ad): \{{K3}}</p>
            <p> K4 (ad): \{{K4}}</p>
            <p> F1 (ad): \{{F1}} </p>
            <p> A (amp): \{{A}} </p>
            <p> R1 (ohm): \{{R1}} </p>
            <p> R (ad): \{{R}} </p>
            <p> F (ad): \{{F}} </p>

            <p> &Delta;&tau;: \{{tau0}}</p>
            <p> &Delta;&tau; corregido: \{{taucorregido}}</p>
            <p> Div vertical: \{{dv}}</p>
          </div>

          <div class="d-flex flex-column justify-content-center ">
            <p> INTENSIDAD DE ESTACIONARIA:</p>
            <p> <span class="resultado"> \{{Iestacionaria}} </span>Cd</p>
            <p> INTENSIDAD DE EFICAZ:</p>
            <p> <span class="resultado"> \{{Ieficaz}} </span>Cd</p>
            <p> INTENSIDAD DE CALCULO:</p>
            <p> <span class="resultado"> \{{Icalculo}} </span>Cd</p>
          </div>

          <div class="d-flex flex-column justify-content-center ">
            <p> Alcance Luminoso nominal calculado en TC:</p>
            <p> <span class="resultado">
                \{{alcance_luminoso_nominal_calculado}} </span> mn</p>
            <p> Alcance geográfico a una altura del ojo del observador (m):</p>
            <p> <input type="number" v-model="altura_ojo" class="w-50"> <span class="resultado">
                \{{alcance_geografico}}</span> mn</p>

          </div>

        </div>
      </div>
      <i> Calculos basados en la recomendaciones MOPU</i>
    </div>
  </div>
  <div class="row text-center">
    <div class="col-12 col-xl-4 calculos mx-auto" id="coordenadas">
      <h1> I. COORDENADAS</h1>

      <div class="uno">
        <h3>DECIMAL A WGS-84</h3>
        <p>Coordenada en decimal <input type="text" v-model="decimal1" placeholder="GG.mmmmmmm"></p>
        <p class="resultado">\{{resultado1}}</p>
        <p>\{{error1}}</p>
        <p v-if="bul==true">Errorcito bul</p>
      </div>

      <div class="dos">
        <h3>WGS-84 A DECIMAL</h3>
        <p>Coordenada en wgs-84 <input type="text" v-model="wgs2" placeholder="GGº MM.mmm'"></p>
        <p class="resultado">\{{resultado2}}</p>
        <p>\{{error2}}</p>
      </div>

      <div class="tres">
        <h3>UTM A WGS-84</h3>
        <p>Coordenada en UTM <input type="text" v-model="wgs3" placeholder="GG° MM' SS.sss&quot; N"></p>
        <p class="resultado">\{{resultado3}}</p>
        <p>\{{error3}}</p>
      </div>
      <i> Conversiones de coordenadas</i>
    </div>
    <div class="col-12 col-xl-7 calculos mx-auto" id="alcances">
      <h1> II. ALCANCES </h1>
      <div class="uno">
        <p> ALCANCE LUMINOSO MINIMO: <input type="number" placeholder="millas nauticas" step="0.1" v-model="alcance"
            class="w-25"> Millas Nauticas </p>

        <p> ZONA DE ESTUDIO <select name="visibilidad" v-model="visibilidad">
            <option value="8.172">Mediterraneo-Baleares</option>
            <option value="6.246">Cantabrico-Galia</option>
            <option value="7.469">Huelva-Cadiz</option>
            <option value="6.839">Sevilla</option>
            <option value="5.76">Ceuta</option>
            <option value="11.699">Canarias</option>
          </select>
          Visibilidad= <span>\{{visibilidad}}</span>
        </p>

        <p> FUENTE AZUL: <select name="azul" v-model="azul">
            <option value="si">Si</option>
            <option value="no">No</option>
          </select> </p>

        <p> TIPO DE SEÑAL: <select name="tipo" v-model="tipo">
            <option value="Nocturna">Nocturna</option>
            <option value="Diurna">Diurna</option>
            <option value="Enfilacion">Enfilacion</option>
          </select> a=<span id="a"> \{{a}} </span> </p>
        <p> LUMINANCIA DE FONDO: <select name="fondo" v-model="fondo">
            <option value="Ninguna">Ninguna</option>
            <option value="Poca">Poca</option>
            <option value="Considerable">Considerable</option>
          </select> Umbral= <span> \{{umbral}}</span> </p>
        <p> DURACION DEL MENOR DESTELLO: <input type="number" v-model="destello" step="0.05" value="0.5" class="w-25">
        </p>

        <p> FACTOR DE SERVICIO: <input type="text" v-model="coef1" size="1"></p>
        <p> FACTOR DE ACRISTALAMIENTO: <input type="text" v-model="coef2" size="1"></p>
        <p> FACTOR DE LUMINANCIA DE FONDO: <input type="text" v-model="coef3" size="1"></p>
      </div>

      <div class="tres">
        <p> INTENSIDAD DE CALCULO: <span class="resultado"> \{{Icalculo}} </span> Cd </p>
        <p> INTENSIDAD DE EFICAZ:<span class="resultado">\{{Ieficaz}}</span> Cd</p>
        <p> INTENSIDAD DE ESTACIONARIA:<span class="resultado"> \{{Iestacionaria}}</span> Cd</p>
      </div>
      <i> Calculos basados en la recomendacion E-200 series IALA</i>
    </div>
  </div>
  <div class="row text-center">
    <div class="col-12 calculos mx-auto" id="autonomia">
      <h1> IV. AUTONOMIA FOTOVOLTAICA</h1>
      <div class="d-flex flex-row">
        <div class="col-3 d-flex flex-column ">
          <p> ZONA DE ESTUDIO <select name="zona" v-model="zona">
              <option value="ACORUÑA">A Coruña</option>
              <option value="ALAVA">Alava</option>
              <option value="ALBACETE">albacete</option>
              <option value="ALICANTE">Alicante</option>
              <option value="ALMERIA">Almeria</option>
              <option value="ASTURIAS">Asturias</option>
              <option value="AVILA">Avila</option>
              <option value="BADAJOZ">Badajoz</option>
              <option value="BALERAS">Baleares</option>
              <option value="BARCELONA">Barcelona</option>
              <option value="BURGOS">Burgos</option>
              <option value="CACERES">Caceres</option>
              <option value="CADIZ">Cadiz</option>
              <option value="CANTABRIA">Cantabria</option>
              <option value="CASTELLON">Castellon</option>
              <option value="CEUTA">Ceuta</option>
              <option value="CIUDADREAL">Ciudad Real</option>
              <option value="CORDOBA">Cordoba</option>
              <option value="CUENCA">Cuenca</option>
              <option value="GERONA">Gerona</option>
              <option value="GRANADA">Granada</option>
              <option value="GUADALAJARA">Guadalajara</option>
              <option value="GUIPUZCOA" selected>Guipuzcua</option>
              <option value="HUELVA">Huelva</option>
              <option value="HUESCA">Huesca</option>
              <option value="JAEN">Jaen</option>
              <option value="LEON">Leon</option>
              <option value="LERIDA">Lerida</option>
              <option value="LUGO">Lugo</option>
              <option value="MADRID">Madrid</option>
              <option value="MALAGA">Malaga</option>
              <option value="MELILLA">Melilla</option>
              <option value="MURCIA">Murcia</option>
              <option value="NAVARRA">Navarra</option>
              <option value="ORENSE">Orense</option>
              <option value="PALENCIA">Palencia</option>
              <option value="LASPALMAS">Las Palma</option>
              <option value="PONTEVEDRA">Pontevedra</option>
              <option value="RIOJA">La Rioja</option>
              <option value="SALAMANCA">Salamanca</option>
              <option value="TENERIFE">Tenerife</option>
              <option value="SEGOVIA">Segovia</option>
              <option value="SEVILLA">Sevilla</option>
              <option value="SORIA">soria</option>
              <option value="TARRAGONA">Tarragona</option>
              <option value="TERUEL">Teruel</option>
              <option value="TOLEDO">Toledo</option>
              <option value="VALENCIA">Valencia</option>
              <option value="VALLADOLID">Valladolid</option>
              <option value="VIZCAYA">vizcaya</option>
              <option value="ZAMORA">Zamora</option>
              <option value="ZARAGOZA">Zaragoza</option>
            </select>
          </p>
          <p>Inclinacion <select name="inclinacion" v-model="inclinacion">
              <option value="0">0</option>
              <option value="5">5</option>
              <option value="10">10</option>
              <option value="15">15</option>
              <option value="20">20</option>
              <option value="25">25</option>
              <option value="30">30</option>
              <option value="35" selected>35</option>
              <option value="40">40</option>
              <option value="45">45</option>
              <option value="0">0</option>
              <option value="50">50</option>
              <option value="55">55</option>
              <option value="60">60</option>
              <option value="65">65</option>
              <option value="70">70</option>
              <option value="75">75</option>
              <option value="80">80</option>
              <option value="85">85</option>
              <option value="90">90</option>

            </select>
          </p>
          <p>Latitud <select name="latitud" v-model="latitud">
              <option value="28">28</option>
              <option value="29">29</option>
              <option value="34">34</option>
              <option value="35">35</option>
              <option value="36">36</option>
              <option value="37">37</option>
              <option value="38">38</option>
              <option value="39">39</option>
              <option value="40">40</option>
              <option value="41">41</option>
              <option value="42">42</option>
              <option value="43" selected>43</option>
              <option value="44">44</option>
              <option value="45">45</option>
            </select>
          <p> Edad (%): <input type="number" v-model="edad" class="w-25"></p>
          <p> Voltaje (V): <input type="number" v-model="voltaje" class="w-25"></p>
          <p> Voltaje Maximo paneles (V): <input type="number" v-model="umpp" class="w-25"></p>
          <p> Wpeak Potencia (w): <input type="number" v-model="potencia" class="w-25"></p>
          <p> Orientacion: <input type="number" v-model="orientacion" class="w-25"></p>
          <p> Consumo (w): <input type="number" v-model="consumo" class="w-25"></p>
          <p> Ciclo trabajo (%): <input type="number" v-model="ciclotrabajo" class="w-25"></p>
          <p> Histeresis encendido (%): <input type="number" v-model="histeresis" class="w-25"></p>
          <p> Consumo continuo: <input type="number" v-model="consumofijo" class="w-25"></p>
          <p> Capacidad Bateria: <input type="number" v-model="capacidad" class="w-25"></p>
          <p> Capacidad Max trabajo : <input type="number" v-model="capacidadmaxima" class="w-25"></p>
          <p> Eficacia : <input type="number" v-model="eficacia" class="w-25"></p>
          <p> Autonomia : <input type="number" v-model="dias" class="w-25"></p>


        </div>

        <div class="col-9">
          <canvas id="myChart"></canvas>

          {{!-- <p>RADIACION: <span> \{{coeficienteradiacion}} </span></p>
          <p> LATITUDINCLINACION <span> \{{coeficientelatitudinclinacion}} </span></p>
          <p> VALORES RADIACION PUNTO kWh/m2<span> \{{valoresRadiacion}} </span></p>
          <p> ENERGIA GANADA<span> \{{energiaGanada}} </span></p>
          <p> ENERGIA CONSUMIDA<span> \{{energiaConsumida}} </span></p>
          <p> CONSUMIDA<span> \{{consumoAh}} </span></p>diasSinSol --}}
          <p> DIAS SIN SOL<span> \{{diasSinSol}} </span> </p>
        </div>
      </div>

      <i> Calculos basados en la recomendaciones MOPU</i>
    </div>
  </div>
  <div class="row text-center d-none d-xl-block">
    <div class="col-11 mx-auto">
      <a href="https://www.iala-aism.org/" target="_blank">
        <img src="/img/iala-mbsback.jpg" class="rounded" alt="aaaa">
      </a>
    </div>
  </div>
</div>

<script>

  var app = new Vue({
    el: "#alcances",
    data: {
      alcance: 2.3,
      visibilidad: 8.172,
      tipo: "Nocturna",
      fondo: "Poca",
      umbral1: null,
      destello: "0.5",
      coef1: "0.7",
      coef2: "1",
      coef3: "1",
      azul: "no",
    },
    mounted: function () {
      this.calcularAlcance();
    },
    filters: {
      redondeo2: function (value) {
        if (value != null) return value.toFixed(2);
      },
      redondeo6: function (value) {
        if (value != null) return value.toFixed(6);
      },
    },
    methods: {
      calcularAlcance: function () {
        this.coef1 = parseFloat(this.coef1);
        this.coef2 = parseFloat(this.coef2);
        this.coef3 = parseFloat(this.coef3);
        this.visibilidad = parseFloat(this.visibilidad);
        if (this.tipo == 3) a = 0.2;
        else a = 0.1;

        if (isNaN(this.alcance)) alert("calcularAlcance no es un numero");
        else this.alcance = parseFloat(this.alcance);

        if (isNaN(this.destello)) alert("introduzca como destello un numero");
        else this.destello = parseFloat(this.destello);

        switch (this.tipo) {
          case "Nocturna":
            switch (this.fondo) {
              case "Ninguna":
                this.umbral1 = 0.0000002;
                break;
              case "Poca":
                this.umbral1 = 0.000002;
                break;
              case "Considerable":
                this.umbral1 = 0.00002;
                break;
            }
            break;

          case "Diurna":
            this.umbral1 = 0.001;
            break;

          case "Enfilacion":
            switch (this.visibilidad) {
              case 6.246:
                this.visibilidad = 3.888;
                break;
              case 7.469:
                this.visibilidad = 5.22;
                break;
              case 6.839:
                this.visibilidad = 4.68;
                break;
              case 5.76:
                this.visibilidad = 3.78;
                break;
              case 8.172:
                this.visibilidad = 5.775;
                break;
              case 11.699:
                this.visibilidad = 8.549;
                break;

            }

            switch (this.fondo) {
              case "Ninguna":
                this.umbral1 = 0.000001;

                break;
              case "Poca":
                this.umbral1 = 0.00001;
                break;
              case "Considerable":
                this.umbral1 = 0.0001;
                break;
            }
            break;
        }
      },
    },
    computed: {
      umbral: function () {
        switch (this.tipo) {
          case "Nocturna":
            switch (this.fondo) {
              case "Ninguna":
                return 0.0000002;
                break;
              case "Poca":
                return 0.000002;
                break;
              case "Considerable":
                return 0.00002;
                break;
            }
            break;

          case "Diurna":
            return 0.001;
            break;

          case "Enfilacion":
            switch (this.fondo) {
              case "Ninguna":
                return 0.000001;

                break;
              case "Poca":
                return 0.00001;
                break;
              case "Considerable":
                return 0.0001;
                break;
            }
            break;
        }
      },
      a: function () {
        if (this.azul == "si" && this.tipo == "Enfilacion") return 0.2;
        else return 0.1;
      },
      Icalculo: function () {
        return (
          3430000 *
          this.alcance *
          this.alcance *
          this.umbral *
          Math.pow(0.05, (-1 * this.alcance) / this.visibilidad)
        ).toFixed(1);
      },
      Ieficaz: function () {
        return (this.Icalculo / this.coef1 / this.coef2 / this.coef3).toFixed(1);
      },
      Iestacionaria: function () {
        return (
          (this.Ieficaz * (parseFloat(this.destello) + this.a)) /
          this.destello
        ).toFixed(1);
      },
    },
  });

  var app2 = new Vue({
    el: "#coordenadas",
    data: {
      decimal1: "39.65525",
      wgs2: "39º 55.345", //GGº MM.mmm'
      wgs3: "39º 52' 25\" N", //GG° MM' SS.sss&quot; N"
      decimal11: null,
      error1: "no error",
      error2: null,
      error3: null,
      bul: false,
      caracteristica: "",
      destellos: "",
      destellosAcum: "",
    },

    filters: {
      redondeo2: function (value) {
        if (value != null) return value.toFixed(2);
      },
      redondeo6: function (value) {
        if (value != null) return value.toFixed(6);
      },
    },
    methods: {
      dormir: function (milliseconds) {
        var start = new Date().getTime();
        for (var i = 0; i < 1e7; i++) {
          if (new Date().getTime() - start > milliseconds) {
            break;
          }
        }
      },
    },
    computed: {
      resultado1: function () {
        this.bul = "false";
        this.error1 = "";
        this.decimal11 = parseFloat(this.decimal1);
        if (isNaN(this.decimal1)) {
          this.error1 = "Introduzca grados en formato decimal GG.gggg";
          this.bul = "true";
        } else {
          var decarray = this.decimal1.split(".");
          if (decarray.length == 2)
            var decimales = parseFloat("0." + decarray[1]) * 60;
          else this.error1 = "Introduzca gradosen formato decimal GG.gggg";
        }
        return decarray[0] + "º " + decimales.toFixed(3) + "'";
      },
      resultado2: function () {
        this.error2 = "";
        var utmarray = this.wgs2.split(" ");

        var gradosar = utmarray[0].split("º");
        var minsar = utmarray[1].split(".");
        var milar = minsar[1].split("'");
        if (isNaN(gradosar[0]) || isNaN(minsar[0]) || isNaN(milar[0]))
          this.error2 = "Introduzca grados y minutos GGº MM.mmm";
        else {
          var grad = parseFloat(gradosar[0]);
          var min = parseFloat(minsar[0]);
          var mil = parseFloat(milar[0]);
        }

        var decimal = grad + (min + mil / 1000) / 60;

        return decimal.toFixed(6);
      },
      resultado3: function () {
        this.error3 = "";
        var utm = this.wgs3;
        var utmarray = utm.split(/\º|\'|\"|\°/g);

        if (isNaN(utmarray[0]) || isNaN(utmarray[1]) || isNaN(utmarray[2]))
          this.error3 = "Introduzca grados minutos y segundos GGº MM' ss\"";
        else {
          var grados = parseFloat(utmarray[0]);
          var min = parseFloat(utmarray[1]);
          var seg = parseFloat(utmarray[2]);
        }
        var minf = min + seg / 60;
        minf = minf.toFixed(3);
        var decimal = grados + "º " + minf + "'";

        return decimal;
      },
    },
    mounted: function () { },
  });

  var app3 = new Vue({
    el: "#alcancesGiratoria",
    data: {
      zona: "huelva",
      TA: "TB",
      alcance: 2.3,
      visibilidad: 8.172,
      horizonte: "",
      tipo: "Nocturna",
      fondo: "Poca",
      umbral1: null,
      destello: "0.5",
      coef1: "0.7",
      coef2: "1",
      coef3: "1",
      azul: "no",

      alcance_luminoso_nominal: 25,
      alcance_requerido_CI: 19.3,
      alcance_requerido_CII: 15.2,
      caracteristica: "L0.200 Oc2.900 L0.200 Oc8.600 L0.200 Oc2.900 L0.200 Oc2.900 L0.200 Oc8.600 L0.200 Oc2.900 L0.200 Oc2.900 L0.200 Oc2.900 L0.200 Oc8.600",
      apariencia_origen: " GpD(2+4)",
      horizonte: false,
      a2: 914,
      tita: 34,
      a2_I: 563,
      titaI: 19,
      h2: 59,
      h3: 59,
      h4: 26.5,

      tita1: 31,
      tita2: 80,
      tita3: 31,
      tita4: 62,
      K: 1,
      Kprima: 1,
      K2prima: 1,
      P: 150,
      V: 24,
      Tc: 'c',
      Rc: 0.150,
      Tau: 0.8,
      a3_I: 853,
      c3_I: 0.85,
      a3_II: 1168,
      c3_II: 0.85,
      L: 650,
      Pf: 0.5,
      b: 2,
      f: 37,
      g: 72,
      n: 2,
      T: 30,
      h: 4,
      F3: 0.85,
      F4: 1,
      F5: 3,
      H: 50,

      altura_ojo: 4,
      apariencia_limite: " L0.194 Oc3.806 L0.194 Oc3.806 L0.194 Oc11.806",
      distancia_vision_0: 350,
      distancia_vision_4: 300,
      distancia_vision_16: 150,
      altura_Hd_ojo_a_d2: -137.0,
      //dv: 9.1,

      inconveniente: [
        "Alcance nominal insuficiente según el que consta en el Libro de Faros del Instituto Hidrográfico de la Marina",
        "Alcance nominal insuficiente según en el que consta en el Plan de Señales Maritimas de 1985-1989",
        "Alcance luminoso insuficiente para cumplir el Criterio I del Plan de Señales Marítimas 1985-1989 (cobertura en la banda costera de veinte millas náuticas en tiempo medio local).",
        "Alcance luminoso insuficiente para cumplir el Criterio II del Plan de Señales Marítimas 1985-1989 (cobertura en la banda costera de doce millas náuticas en tiempo brumoso local).",
        "Alcance geográfico insuficiente para cumploir el Criterio I del Plan de Señales Maritimas 1985-1989 (cobertura en la banda costera de veinte millas náuticas para 16m de altura).",
        "Alcance geográfico insuficiente para cumploir el Criterio II del Plan de Señales Maritimas 1985-1989 (cobertura en la banda costera de doce millaspara 4m de altura).",
        "Destelo aislado excesivamente corto para facilitar la distinción (se ha estimado así cuando su duración inferior a 0,1s)",
        "Distancia de perceción del haz excesivamente larga (superior a 1/4mn en balizas y 1/2mn en faros para altura del ojo del observador a 4m)",
        "Deslumbramiento en la zona de navegación necesaria para una altura del ojo del observador a 16m",
        "No cumpl el limite del punto 8 del British Standar 942:1949 (divergencia del haz 1/50 o bien de 1.15º)",
        "Apariencia cualitativa inadaptada a la del Plan de Señales Marítimas 1985-1989",
      ],
      transmisionesAtmosfericas: [
        { "observatorio": "almeria", "TB": 8.28, "TM": 20.15, "TC": 33.45, "T90": 7.469, "T70": 5.220 },
        { "observatorio": "alicante", "TB": 13.80, "TM": 23.21, "TC": 36.89, "T90": 8.172, "T70": 5.775 },
        { "observatorio": "barcelona", "TB": 3.14, "TM": 11.80, "TC": 50.74, "T90": 8.172, "T70": 5.775 },
        { "observatorio": "sebastian", "TB": 4.16, "TM": 19.29, "TC": 36.27, "T90": 3.888, "T70": 6.246 },
        { "observatorio": "santander", "TB": 2.95, "TM": 8.11, "TC": 22.28, "T90": 3.888, "T70": 6.246 },
        { "observatorio": "coruna", "TB": 5.63, "TM": 12.21, "TC": 20.78, "T90": 3.888, "T70": 6.246 },
        { "observatorio": "vigo", "TB": 5.43, "TM": 18.66, "TC": 22.77, "T90": 3.888, "T70": 6.246 },
        { "observatorio": "cadiz", "TB": 15.7, "TM": 21.28, "TC": 25.90, "T90": 7.469, "T70": 5.220 },
        { "observatorio": "ceuta", "TB": 7.86, "TM": 20.94, "TC": 31.66, "T90": 5.760, "T70": 3.780 },
        { "observatorio": "malaga", "TB": 5.98, "TM": 17.74, "TC": 28.43, "T90": 7.469, "T70": 5.220 },
        { "observatorio": "mahon", "TB": 8.39, "TM": 17.89, "TC": 32.65, "T90": 8.172, "T70": 5.775 },
        { "observatorio": "mallorca", "TB": 10.65, "TM": 20.52, "TC": 31.42, "T90": 8.172, "T70": 5.775 },
        { "observatorio": "ibiza", "TB": 12.01, "TM": 25.44, "TC": 39.09, "T90": 8.172, "T70": 5.775 },
        { "observatorio": "tenerife", "TB": 20.13, "TM": 24.99, "TC": 39.33, "T90": 11.699, "T70": 8.549 },
        { "observatorio": "palmas", "TB": 8.48, "TM": 21.91, "TC": 41.12, "T90": 11.699, "T70": 8.549 },
        { "observatorio": "fuerteventura", "TB": 12.10, "TM": 19.68, "TC": 31.15, "T90": 11.699, "T70": 8.549 },
        { "observatorio": "huelva", "TB": 4.08, "TM": 10.35, "TC": 14.11, "T90": 7.469, "T70": 5.22 },
        { "observatorio": "valencia", "TB": 4.26, "TM": 10.77, "TC": 25.65, "T90": 8.172, "T70": 5.775 },

        { "observatorio": "prueba", "TB": 28, "TM": 15, "TC": 45, "T90": 7, "T70": 5 },
      ],
    },
    mounted: function () {
    },
    filters: {
      redondeo2: function (value) {
        if (value != null) return value.toFixed(2);
      },
      redondeo6: function (value) {
        if (value != null) return value.toFixed(6);
      },
    },
    methods: {
      caracteristicaToArray: function () {
        let destellos;
        let destellosAcum;
        let caracteristicaMod;
        let repeticiones, caracteristica;
        caracteristica = this.caracteristica.toLowerCase();
        caracteristica = caracteristica.replace(/\ |\(|\[|\[|\)|\]\+/g, '').replace(/,/g, '.').replace(/oc/g, "l").replace(/o/g, "l");
        //console.log(caracteristica);

        //Tratamos las posibles repeticiones
        //Si hay X
        if (caracteristica.search("x") != -1) {
          repeticiones = caracteristica.charAt(caracteristica.search("x") + 1); //el siguiente digito al simbolo multiplicacion 'x' es el numero de repeticiones
          let trimado = 'x' + repeticiones;
          caract = caracteristica.split(trimado);
          caract[0] = caract[0].repeat(repeticiones);
          caracteristicaMod = caract[0].concat(caract[1]);
        } else
          caracteristicaMod = caracteristica;
        //console.log(caracteristicaMod)


        //Doy por hecho que siempre se alternan L y O empezando por L
        caracteristicaMod = caracteristicaMod.replace('l', '');
        //quito la primera L por no generar un item de array al usar el split
        destellos = caracteristicaMod.split('l');
        destellosAcum = new Array(destellos.length);
        destellosAcum.fill(0, 0, destellos.length);

        //Lo parseo a float
        for (let i = 0; i < destellos.length; i++) {
          destellos[i] = parseFloat(destellos[i]);
        }
        return destellos;
      },
      minimoDestello: function (destellos) {
        let min = 1000;
        for (var i = 0; i < destellos.length; i += 2) {
          if (destellos[i] < min)
            min = destellos[i];
        }
        return min;
      },
      obtenerTA: function (observatorio, TA) {
        var item = this.transmisionesAtmosfericas.find((element) => element.observatorio == observatorio);
        switch (TA) {
          case 'TB':
            return item.TB;
          case 'TM':
            return item.TM;
          case 'TC':
            return item.TC;
          case 'T90':
            return item.T90;
          case 'T70':
            return item.T70;
          default:
            return 0;
        }
        //return item;
      },
      getBaseLog: function (x, y) {
        return Math.log(y) / Math.log(x);
      }
    },
    computed: {
      c2: function () {
        //Si angulo>30 y=−0.01167x+1.0851
        if (this.tita >= 30) {
          return (-0.01167 * this.tita + 1.0851).toFixed(4);
        } else if (this.tita >= 20) {
          return (-0.0075 * this.tita + 0.96).toFixed(4);
        } else {
          return ((-1 / 200 * this.tita ** 2 + 13 / 10 * this.tita + 0.888) / (1000)).toFixed(4);
        }
      },
      c2_I: function () {
        //TODO:
        return (0.74);
      },
      K2: function () {
        //Si angulo>30 y=−0.01167x+1.0851
        if (this.tita >= 30) {
          return (-0.01167 * this.tita + 1.0851).toFixed(4);
        } else if (this.tita >= 20) {
          return (-0.0075 * this.tita + 0.96).toFixed(4);
        } else {
          return ((-1 / 200 * this.tita ** 2 + 13 / 10 * this.tita + 0.888) / (1000)).toFixed(4);
        }
      },
      // f(90,60)=200 f(80,73)=200
      // f(90,53)=250 f(75,70)=250 
      // f(90,44)=300 f(70,66)=300 
      // f(90,34)=350 f(75,65)=0350 
      // f(90,22)=400 f(65,58)=400
      // f(90,7)=450 f(65,35)=450 f(60,55)=450
      // f(80,0)=500 f(70,33)=500 f(55,52)=500
      // f(77,0)=550 f(70,20)=550 f(60,35)=550 f(50,47)=550 
      // f(70,0)=600 f(62,20)=600 f(57,25)=600 f(47,40)=600 f(45,42)=600
      // f(60,0)=650 f(55,13)=650 f(50,22)=650 f(45,30)=650 f(40,35)=650
      // f(47,0)=700 f(44,10)=700 f(38,20)=700 f(35,25)=700 f(30,30)=700
      //TODO: PUES ESTA MAL LA ECUACION 
      // chatGPT para K3 y K4 f(x,y)=−0.05x^2 +0.2xy−0.15y^2 +17.75x−1.75y+187.5

      //0.00158730159xy−0.0173015873x+0.0141269841y+0.146190476
      K3: function () {
        let factorCorreccion = 0.04 / 55 * 47;
        return ((-0.05 * this.tita2 ** 2 + 0.2 * this.tita1 * this.tita2 - 0.15 * this.tita1 ** 2 + 17.75 * this.tita2 - 1.75 * this.tita1 + 187.5) / 100 * factorCorreccion).toFixed(3);
      },
      K4: function () {
        let factorCorreccion = 0.04;
        return ((-0.05 * this.tita4 ** 2 + 0.2 * this.tita3 * this.tita4 - 0.15 * this.tita3 ** 2 + 17.75 * this.tita4 - 1.75 * this.tita3 + 187.5) / 100 * factorCorreccion).toFixed(3);
      },
      A: function () {
        //TODO:
        return (this.P / this.V);
      },

      L1: function () {
        //TODO:
        return (1689.44);
      },
      tau0: function () {
        //console.log(this.caracteristicaToArray(this.caracteristica));
        return (this.minimoDestello(this.caracteristicaToArray(this.caracteristica)));
        //return (9.549 * this.b / this.f / 60 * this.T).toFixed(3);
      },
      tau: function () {
        //TODO:
        //return (0.024);
        return (this.tau0 * this.F2).toFixed(3);
      },
      taucorregido: function () {
        //reta 90%  figura III.26
        return (this.A * this.F2).toFixed(3);
      },
      F1: function () {
        //TODO:
        return (0.16);
      },
      F2: function () {
        //TODO:
        return (0.93);
      },
      X: function () {
        //TODO:
        return (0.581);
      },
      TC: function () {
        //TODO:
        return (0.74);
      },
      L2: function () {
        //TODO:
        return (0.74);
      },
      L3: function () {
        //TODO:
        return (0.74);
      },
      L4: function () {
        //TODO:
        return (0.74);
      },
      R1: function () {
        //TODO:
        return (0.74);
      },
      R: function () {
        //TODO:
        return (0.74);
      },
      F: function () {
        //TODO:
        return (0.74);
      },
      getTA: function () {
        return this.obtenerTA(this.zona, this.TA);
      },
      alcance_luminoso_nominal_calculado: function () {
        //console.log((this.obtenerTA(this.zona, this.TA)));
        //NEWTON RAPSHON!!! con poca luminancia de fondo 0.000002
        var D = this.alcance_luminoso_nominal, fx, fprimax, vis;
        vis = 9;
        vis = this.obtenerTA(this.zona, this.TA);
        //console.log(vis);
        if (vis > 1) {

          do {
            //fx = 0.686 * D ** 2 - this.Icalculo * vis ** D;
            fx = this.Icalculo - (3430000 * 2 * 10 ** -6) * (D ** 2) * (0.05 ** -(D / vis));
            //fprimax = 2 * 0.686 * D - (this.Icalculo * vis ** D) * this.getBaseLog(Math.E,vis);
            fprimax = -[((0.05 ** -(D / vis)) * 2 * 3430000 * 2 * 10 ** -6 * D) + ((3430000 * 2 * 10 ** -6) * (D ** 2) * this.getBaseLog(Math.E, 0.05) * (0.05 ** -(D / vis)) * (-1 / vis))]
            D = D - fx / fprimax;
            //console.log(fx + " " + fprimax + " " + fx / fprimax + " " + D);
          } while (fx / fprimax > 0.01);
        }

        return D.toFixed(2);

      },
      dv: function () {
        return (2 * (Math.atan(this.h / 2 / this.f)) * 180 / Math.PI).toFixed(2);
      },
      alcance_geografico: function () {
        return (2.08 * (Math.sqrt(this.H) + Math.sqrt(this.altura_ojo))).toFixed(2);

      },
      Iestacionaria: function () {
        if (this.horizonte) {
          return (this.K * [this.b * (this.h2 * this.L2 * this.K2 + this.h3 * this.L3 * this.K3 + this.K2prima * this.h4 * this.L4 * this.K4)]).toFixed(2);
        } else {
          return ((this.L1 * (this.a2 * this.c2 + this.a2_I * this.c2_I + this.a3_I * this.Pf * this.c3_I + this.a3_II * this.Pf * this.c3_II))).toFixed(2);
        }
      },
      Ieficaz: function () {
        return (
          (this.Iestacionaria * (this.F1))
        ).toFixed(2);
      },
      Icalculo: function () {
        return (
          (this.Ieficaz * (this.F3 * this.F4 / this.F5))
        ).toFixed(2);
      },
    },
  });

  var app4 = new Vue({
    el: "#autonomia",
    data: {
      alcance: 2.3,
      visibilidad: 8.172,
      orientacion: 1,
      inclinacion: 40,
      zona: "VALENCIA",
      latitud: 38,
      edad: 20,
      voltaje: 12,
      umpp: 20,
      potencia: 50,
      consumo: 18,
      ciclotrabajo: 20,
      histeresis: 0,
      consumofijo: 0.2,
      capacidad: 90,
      capacidadmaxima: 80,
      eficacia: 1.1,
      dias: 0,
      radiacion: [{ 'ciudad': 'ALAVA', 'radiacion': [1.28, 1.92, 3.11, 3.61, 4.11, 4.61, 5.03, 4.81, 3.97, 2.64, 1.53, 1.14] }, { 'ciudad': 'ALBACETE', 'radiacion': [1.86, 2.92, 4.17, 5.33, 5.89, 6.97, 7.42, 6.44, 5.22, 3.44, 2.33, 1.78] }, { 'ciudad': 'ALICANTE', 'radiacion': [2.36, 3.33, 4.53, 5.25, 6.42, 6.89, 7.17, 6.25, 5.08, 3.78, 2.72, 2.11] }, { 'ciudad': 'ALMERIA', 'radiacion': [2.47, 3.39, 4.56, 5.44, 6.42, 6.83, 7.03, 6.25, 5.14, 3.86, 2.78, 2.22] }, { 'ciudad': 'ASTURIAS', 'radiacion': [1.47, 2.14, 2.94, 3.39, 4.17, 4.22, 4.67, 4.11, 3.44, 2.72, 1.64, 1.28] }, { 'ciudad': 'AVILA', 'radiacion': [1.67, 2.53, 3.75, 4.92, 5.39, 6.19, 7.31, 7.03, 5.22, 3.11, 1.92, 1.44] }, { 'ciudad': 'BADAJOZ', 'radiacion': [1.81, 2.78, 3.78, 5.19, 6.06, 6.83, 7.19, 6.61, 4.97, 3.42, 2.28, 1.72] }, { 'ciudad': 'BALEARES', 'radiacion': [2, 2.97, 4, 4.5, 5.83, 6.31, 6.72, 5.72, 4.56, 3.36, 2.36, 1.81] }, { 'ciudad': 'BARCELONA', 'radiacion': [1.81, 2.64, 3.58, 4.47, 5.17, 5.64, 6, 5.03, 4.06, 3, 2, 1.61] }, { 'ciudad': 'BURGOS', 'radiacion': [1.42, 2.19, 3.44, 4.44, 5.19, 5.97, 6.39, 5.75, 4.64, 2.81, 1.81, 1.25] }, { 'ciudad': 'CACERES', 'radiacion': [1.89, 2.78, 4.08, 5.44, 6.14, 6.97, 7.81, 7.06, 5.47, 3.53, 2.47, 1.83] }, { 'ciudad': 'CADIZ', 'radiacion': [2.25, 3.19, 4.36, 5.14, 6.17, 6.61, 7.19, 6.39, 5.03, 3.94, 2.78, 2.06] }, { 'ciudad': 'CANTABRIA', 'radiacion': [1.39, 2.06, 3.06, 3.61, 4.47, 4.72, 5.11, 4.31, 3.61, 2.64, 1.61, 1.25] }, { 'ciudad': 'CASTELLON', 'radiacion': [2.22, 3.39, 4.31, 4.83, 5.72, 5.94, 6.64, 5.42, 4.61, 3.64, 2.39, 2.03] }, { 'ciudad': 'CEUTA', 'radiacion': [2.47, 3.64, 5.17, 5.83, 6.75, 7.42, 7.44, 6.75, 5.31, 3.94, 3.06, 2.39] }, { 'ciudad': 'CIUDADREAL', 'radiacion': [1.94, 2.81, 4.17, 5.19, 5.94, 6.58, 7.03, 6.44, 5.22, 3.47, 2.42, 1.81] }, { 'ciudad': 'CORDOBA', 'radiacion': [2, 2.81, 4.19, 5.14, 6.06, 7.19, 7.92, 6.97, 5.53, 3.5, 2.39, 1.92] }, { 'ciudad': 'CORUÑA', 'radiacion': [1.5, 2.22, 3.17, 3.44, 4.28, 4.5, 4.83, 4.25, 3.86, 3.03, 1.78, 1.42] }, { 'ciudad': 'CUENCA', 'radiacion': [1.64, 2.44, 3.58, 4.83, 5.19, 6.11, 7.11, 6.19, 4.86, 3.11, 2, 1.53] }, { 'ciudad': 'GERONA', 'radiacion': [1.97, 2.92, 3.94, 4.42, 5.19, 5.28, 6.19, 5.14, 4.14, 3.25, 2.17, 1.83] }, { 'ciudad': 'GRANADA', 'radiacion': [2.17, 3, 4.22, 5.14, 6.08, 6.89, 7.42, 6.56, 5.22, 3.58, 2.67, 1.97] }, { 'ciudad': 'GUADALAJARA', 'radiacion': [1.81, 2.56, 3.89, 4.97, 5.39, 6.31, 6.94, 6.44, 4.94, 3.25, 2.17, 1.56] }, { 'ciudad': 'GUIPUZCOA', 'radiacion': [1.53, 2.14, 3.14, 3.25, 4.06, 4.5, 4.47, 3.78, 3.53, 2.86, 1.72, 1.39] }, { 'ciudad': 'HUELVA', 'radiacion': [2.11, 3.14, 4.44, 5.42, 6.69, 7.11, 7.97, 7.11, 5.89, 4.03, 2.56, 2.08] }, { 'ciudad': 'HUESCA', 'radiacion': [1.69, 2.67, 3.97, 5.19, 5.64, 6.14, 6.42, 5.81, 4.69, 3.14, 2, 1.42] }, { 'ciudad': 'JAEN', 'radiacion': [1.86, 2.81, 4, 5, 5.64, 6.78, 7.42, 6.69, 5.33, 3.31, 2.25, 1.81] }, { 'ciudad': 'LEON', 'radiacion': [1.61, 2.42, 3.83, 4.78, 5.42, 6.14, 6.72, 5.81, 4.78, 2.89, 1.94, 1.33] }, { 'ciudad': 'LERIDA', 'radiacion': [1.67, 2.75, 5, 5.22, 5.81, 6.28, 6.61, 5.92, 4.67, 3.36, 2, 1.33] }, { 'ciudad': 'LUGO', 'radiacion': [1.42, 2.11, 3.25, 4.22, 4.75, 5.42, 5.61, 5.11, 4.17, 2.75, 1.72, 1.25] }, { 'ciudad': 'MADRID', 'radiacion': [1.86, 2.94, 3.78, 5.22, 5.81, 6.53, 7.22, 6.42, 4.69, 3.17, 2.08, 1.64] }, { 'ciudad': 'MALAGA', 'radiacion': [2.31, 3.33, 4.31, 5.14, 6.44, 6.81, 7.36, 6.44, 5.28, 3.78, 2.58, 2.22] }, { 'ciudad': 'MELILLA', 'radiacion': [2.61, 3.5, 4.78, 5.64, 6.39, 6.89, 6.89, 6.28, 5.08, 3.94, 3.03, 2.42] }, { 'ciudad': 'MURCIA', 'radiacion': [2.81, 4.11, 4.61, 5.67, 6.72, 7.11, 7.69, 6.53, 5.17, 3.86, 2.72, 2.25] }, { 'ciudad': 'NAVARRA', 'radiacion': [1.39, 2.06, 3.42, 4.03, 4.75, 5.25, 5.69, 5.06, 4.5, 2.83, 1.67, 1.25] }, { 'ciudad': 'ORENSE', 'radiacion': [1.31, 2.03, 3.14, 3.89, 4.5, 4.89, 5.08, 4.61, 3.97, 2.61, 1.56, 1.19] }, { 'ciudad': 'PALENCIA', 'radiacion': [1.47, 2.5, 3.67, 4.86, 5.47, 6.06, 6.69, 6, 4.75, 3.03, 1.83, 1.28] }, { 'ciudad': 'LASPALMAS', 'radiacion': [3.11, 3.94, 4.94, 5.44, 6.03, 6.25, 6.75, 6.08, 5.5, 4.19, 3.42, 2.97] }, { 'ciudad': 'PONTEVEDRA', 'radiacion': [1.53, 2.28, 3.61, 4.36, 4.86, 5.67, 6.11, 5.25, 4.19, 3.14, 1.89, 1.53] }, { 'ciudad': 'RIOJA', 'radiacion': [1.56, 2.44, 3.81, 4.61, 5.33, 5.94, 6.47, 5.78, 4.5, 2.97, 1.89, 1.33] }, { 'ciudad': 'SALAMANCA', 'radiacion': [1.69, 2.64, 3.75, 4.75, 5.47, 6.33, 6.83, 6.28, 4.86, 3.14, 2.06, 1.44] }, { 'ciudad': 'TENERIFE', 'radiacion': [2.97, 3.69, 5.03, 5.97, 7.14, 7.36, 8.14, 7.39, 5.89, 4.5, 3, 2.58] }, { 'ciudad': 'SEGOVIA', 'radiacion': [1.58, 2.44, 3.72, 5.11, 5.67, 6.28, 7.14, 6.92, 5.22, 3.17, 1.89, 1.42] }, { 'ciudad': 'SEVILLA', 'radiacion': [2.03, 3.03, 4, 5.33, 6.22, 6.75, 6.92, 6.39, 4.97, 3.42, 2.44, 1.92] }, { 'ciudad': 'SORIA', 'radiacion': [1.64, 2.42, 3.56, 4.75, 5.47, 6.06, 6.69, 6.19, 4.86, 3.08, 2.11, 1.56] }, { 'ciudad': 'TARRAGONA', 'radiacion': [2.03, 2.97, 4.14, 4.89, 5.61, 6.25, 6.61, 5.69, 4.56, 3.42, 2.44, 1.75] }, { 'ciudad': 'TERUEL', 'radiacion': [1.69, 2.44, 3.58, 4.64, 5.11, 5.72, 6.06, 5.75, 4.69, 3.06, 1.97, 1.47] }, { 'ciudad': 'TOLEDO', 'radiacion': [1.72, 2.64, 3.89, 5.36, 5.83, 6.78, 7.56, 6.81, 5.03, 3.31, 2.11, 1.56] }, { 'ciudad': 'VALENCIA', 'radiacion': [2.11, 2.94, 4.14, 5.03, 5.72, 6.33, 6.61, 5.75, 4.64, 3.33, 2.42, 1.83] }, { 'ciudad': 'VALLADOLID', 'radiacion': [1.53, 2.44, 3.86, 4.78, 5.53, 6.28, 6.97, 6.39, 5.08, 3.11, 1.92, 1.17] }, { 'ciudad': 'VIZCAYA', 'radiacion': [1.39, 1.97, 3, 3.53, 4.31, 4.64, 4.97, 4.36, 3.64, 2.58, 1.67, 1.28] }, { 'ciudad': 'ZAMORA', 'radiacion': [1.5, 2.47, 3.67, 4.81, 6.17, 6, 6.53, 6.11, 4.78, 3.08, 1.86, 1.28] }, { 'ciudad': 'ZARAGOZA', 'radiacion': [1.75, 2.72, 4.22, 5.08, 6.06, 6.72, 6.97, 6.5, 5.08, 3.36, 2.06, 1.58] }],
      latitudinclinacion: [{ 'latitudinclinacion': 280, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 285, 'coeficientes': [1.05, 1.04, 1.03, 1.01, 1, 1, 1, 1.02, 1.03, 1.05, 1.06, 1.06] }, { 'latitudinclinacion': 2810, 'coeficientes': [1.1, 1.08, 1.05, 1.02, 1, 0.99, 1, 1.02, 1.06, 1.1, 1.12, 1.12] }, { 'latitudinclinacion': 2815, 'coeficientes': [1.14, 1.11, 1.07, 1.02, 0.99, 0.98, 0.99, 1.03, 1.08, 1.13, 1.17, 1.17] }, { 'latitudinclinacion': 2820, 'coeficientes': [1.17, 1.13, 1.08, 1.02, 0.97, 0.95, 0.97, 1.02, 1.09, 1.16, 1.21, 1.21] }, { 'latitudinclinacion': 2825, 'coeficientes': [1.2, 1.15, 1.08, 1, 0.95, 0.93, 0.95, 1.01, 1.09, 1.19, 1.25, 1.24] }, { 'latitudinclinacion': 2830, 'coeficientes': [1.22, 1.15, 1.07, 0.98, 0.92, 0.89, 0.92, 0.99, 1.09, 1.2, 1.27, 1.27] }, { 'latitudinclinacion': 2835, 'coeficientes': [1.23, 1.16, 1.06, 0.96, 0.88, 0.85, 0.88, 0.96, 1.08, 1.21, 1.29, 1.29] }, { 'latitudinclinacion': 2840, 'coeficientes': [1.24, 1.15, 1.04, 0.92, 0.84, 0.8, 0.84, 0.93, 1.06, 1.21, 1.3, 1.3] }, { 'latitudinclinacion': 2845, 'coeficientes': [1.23, 1.14, 1.01, 0.89, 0.79, 0.75, 0.79, 0.89, 1.04, 1.2, 1.3, 1.3] }, { 'latitudinclinacion': 2850, 'coeficientes': [1.22, 1.12, 0.98, 0.84, 0.73, 0.69, 0.73, 0.84, 1, 1.18, 1.3, 1.3] }, { 'latitudinclinacion': 2855, 'coeficientes': [1.2, 1.09, 0.94, 0.79, 0.68, 0.63, 0.67, 0.79, 0.96, 1.15, 1.28, 1.28] }, { 'latitudinclinacion': 2860, 'coeficientes': [1.18, 1.05, 0.9, 0.73, 0.61, 0.57, 0.61, 0.73, 0.92, 1.12, 1.26, 1.26] }, { 'latitudinclinacion': 2865, 'coeficientes': [1.14, 1.01, 0.85, 0.67, 0.55, 0.5, 0.54, 0.67, 0.86, 1.08, 1.22, 1.23] }, { 'latitudinclinacion': 2870, 'coeficientes': [1.1, 0.97, 0.79, 0.61, 0.48, 0.42, 0.47, 0.6, 0.81, 1.03, 1.18, 1.19] }, { 'latitudinclinacion': 2875, 'coeficientes': [1.06, 0.91, 0.73, 0.54, 0.4, 0.35, 0.39, 0.53, 0.74, 0.97, 1.14, 1.15] }, { 'latitudinclinacion': 2880, 'coeficientes': [1, 0.86, 0.66, 0.47, 0.33, 0.27, 0.32, 0.46, 0.67, 0.91, 1.08, 1.1] }, { 'latitudinclinacion': 2885, 'coeficientes': [0.94, 0.79, 0.59, 0.39, 0.25, 0.19, 0.24, 0.38, 0.6, 0.84, 1.02, 1.04] }, { 'latitudinclinacion': 2890, 'coeficientes': [0.88, 0.72, 0.52, 0.32, 0.17, 0.11, 0.16, 0.31, 0.53, 0.77, 0.95, 0.98] }, { 'latitudinclinacion': 290, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 295, 'coeficientes': [1.05, 1.04, 1.03, 1.02, 1, 1, 1, 1.02, 1.03, 1.05, 1.07, 1.06] }, { 'latitudinclinacion': 2910, 'coeficientes': [1.1, 1.08, 1.05, 1.02, 1, 0.99, 1, 1.03, 1.06, 1.1, 1.12, 1.12] }, { 'latitudinclinacion': 2915, 'coeficientes': [1.15, 1.11, 1.07, 1.03, 0.99, 0.98, 0.99, 1.03, 1.08, 1.14, 1.18, 1.17] }, { 'latitudinclinacion': 2920, 'coeficientes': [1.18, 1.14, 1.08, 1.02, 0.98, 0.96, 0.98, 1.03, 1.1, 1.17, 1.22, 1.22] }, { 'latitudinclinacion': 2925, 'coeficientes': [1.21, 1.15, 1.08, 1.01, 0.95, 0.93, 0.95, 1.01, 1.1, 1.2, 1.26, 1.25] }, { 'latitudinclinacion': 2930, 'coeficientes': [1.23, 1.16, 1.08, 0.99, 0.92, 0.9, 0.92, 1, 1.1, 1.21, 1.28, 1.28] }, { 'latitudinclinacion': 2935, 'coeficientes': [1.24, 1.17, 1.07, 0.97, 0.89, 0.86, 0.89, 0.97, 1.09, 1.22, 1.3, 1.3] }, { 'latitudinclinacion': 2940, 'coeficientes': [1.25, 1.16, 1.05, 0.93, 0.85, 0.81, 0.85, 0.94, 1.07, 1.22, 1.32, 1.31] }, { 'latitudinclinacion': 2945, 'coeficientes': [1.24, 1.15, 1.02, 0.9, 0.8, 0.76, 0.8, 0.9, 1.05, 1.21, 1.32, 1.32] }, { 'latitudinclinacion': 2950, 'coeficientes': [1.23, 1.13, 0.99, 0.85, 0.75, 0.71, 0.74, 0.85, 1.02, 1.19, 1.31, 1.31] }, { 'latitudinclinacion': 2955, 'coeficientes': [1.22, 1.1, 0.95, 0.8, 0.69, 0.64, 0.68, 0.8, 0.98, 1.17, 1.3, 1.3] }, { 'latitudinclinacion': 2960, 'coeficientes': [1.19, 1.07, 0.91, 0.75, 0.63, 0.58, 0.62, 0.75, 0.93, 1.14, 1.28, 1.28] }, { 'latitudinclinacion': 2965, 'coeficientes': [1.16, 1.03, 0.86, 0.69, 0.56, 0.51, 0.55, 0.69, 0.88, 1.1, 1.24, 1.25] }, { 'latitudinclinacion': 2970, 'coeficientes': [1.12, 0.98, 0.8, 0.62, 0.49, 0.44, 0.48, 0.62, 0.82, 1.05, 1.2, 1.22] }, { 'latitudinclinacion': 2975, 'coeficientes': [1.07, 0.93, 0.74, 0.55, 0.42, 0.36, 0.41, 0.55, 0.76, 0.99, 1.16, 1.17] }, { 'latitudinclinacion': 2980, 'coeficientes': [1.02, 0.87, 0.68, 0.48, 0.34, 0.28, 0.33, 0.48, 0.69, 0.93, 1.1, 1.12] }, { 'latitudinclinacion': 2985, 'coeficientes': [0.96, 0.81, 0.61, 0.41, 0.26, 0.21, 0.25, 0.4, 0.62, 0.87, 1.04, 1.06] }, { 'latitudinclinacion': 2990, 'coeficientes': [0.9, 0.74, 0.54, 0.33, 0.18, 0.13, 0.17, 0.32, 0.54, 0.79, 0.97, 1] }, { 'latitudinclinacion': 340, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 345, 'coeficientes': [1.06, 1.05, 1.04, 1.02, 1.01, 1.01, 1.01, 1.02, 1.04, 1.06, 1.08, 1.07] }, { 'latitudinclinacion': 3410, 'coeficientes': [1.12, 1.1, 1.07, 1.04, 1.01, 1.01, 1.02, 1.04, 1.08, 1.12, 1.14, 1.14] }, { 'latitudinclinacion': 3415, 'coeficientes': [1.17, 1.13, 1.09, 1.05, 1.01, 1, 1.01, 1.05, 1.11, 1.17, 1.21, 1.2] }, { 'latitudinclinacion': 3420, 'coeficientes': [1.21, 1.16, 1.11, 1.05, 1, 0.98, 1, 1.05, 1.13, 1.21, 1.26, 1.25] }, { 'latitudinclinacion': 3425, 'coeficientes': [1.25, 1.19, 1.12, 1.04, 0.98, 0.96, 0.99, 1.05, 1.14, 1.24, 1.31, 1.3] }, { 'latitudinclinacion': 3430, 'coeficientes': [1.27, 1.2, 1.12, 1.03, 0.96, 0.94, 0.96, 1.03, 1.14, 1.27, 1.34, 1.33] }, { 'latitudinclinacion': 3435, 'coeficientes': [1.29, 1.21, 1.11, 1.01, 0.93, 0.9, 0.93, 1.01, 1.14, 1.28, 1.37, 1.36] }, { 'latitudinclinacion': 3440, 'coeficientes': [1.31, 1.21, 1.1, 0.98, 0.89, 0.86, 0.89, 0.99, 1.13, 1.29, 1.39, 1.38] }, { 'latitudinclinacion': 3445, 'coeficientes': [1.31, 1.21, 1.08, 0.95, 0.85, 0.81, 0.85, 0.95, 1.11, 1.29, 1.4, 1.4] }, { 'latitudinclinacion': 3450, 'coeficientes': [1.31, 1.19, 1.05, 0.91, 0.8, 0.76, 0.8, 0.91, 1.09, 1.28, 1.41, 1.4] }, { 'latitudinclinacion': 3455, 'coeficientes': [1.3, 1.17, 1.02, 0.86, 0.75, 0.7, 0.75, 0.87, 1.05, 1.26, 1.4, 1.39] }, { 'latitudinclinacion': 3460, 'coeficientes': [1.28, 1.14, 0.98, 0.81, 0.69, 0.64, 0.69, 0.82, 1.01, 1.23, 1.38, 1.38] }, { 'latitudinclinacion': 3465, 'coeficientes': [1.25, 1.11, 0.93, 0.75, 0.63, 0.58, 0.62, 0.76, 0.96, 1.2, 1.36, 1.36] }, { 'latitudinclinacion': 3470, 'coeficientes': [1.21, 1.06, 0.88, 0.69, 0.56, 0.51, 0.55, 0.69, 0.91, 1.15, 1.32, 1.32] }, { 'latitudinclinacion': 3475, 'coeficientes': [1.17, 1.01, 0.82, 0.63, 0.49, 0.43, 0.48, 0.63, 0.85, 1.1, 1.28, 1.28] }, { 'latitudinclinacion': 3480, 'coeficientes': [1.12, 0.96, 0.76, 0.56, 0.41, 0.36, 0.41, 0.56, 0.78, 1.04, 1.23, 1.24] }, { 'latitudinclinacion': 3485, 'coeficientes': [1.06, 0.9, 0.69, 0.48, 0.34, 0.28, 0.33, 0.48, 0.71, 0.98, 1.17, 1.18] }, { 'latitudinclinacion': 3490, 'coeficientes': [1, 0.83, 0.62, 0.41, 0.26, 0.2, 0.25, 0.4, 0.64, 0.91, 1.1, 1.12] }, { 'latitudinclinacion': 350, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 355, 'coeficientes': [1.06, 1.05, 1.04, 1.02, 1.01, 1.01, 1.01, 1.03, 1.04, 1.06, 1.08, 1.07] }, { 'latitudinclinacion': 3510, 'coeficientes': [1.12, 1.1, 1.07, 1.04, 1.02, 1.01, 1.02, 1.04, 1.08, 1.12, 1.15, 1.14] }, { 'latitudinclinacion': 3515, 'coeficientes': [1.17, 1.14, 1.09, 1.05, 1.02, 1, 1.02, 1.05, 1.11, 1.17, 1.21, 1.21] }, { 'latitudinclinacion': 3520, 'coeficientes': [1.22, 1.17, 1.11, 1.05, 1.01, 0.99, 1.01, 1.06, 1.13, 1.22, 1.27, 1.26] }, { 'latitudinclinacion': 3525, 'coeficientes': [1.25, 1.2, 1.12, 1.05, 0.99, 0.97, 0.99, 1.05, 1.15, 1.25, 1.32, 1.31] }, { 'latitudinclinacion': 3530, 'coeficientes': [1.28, 1.21, 1.13, 1.04, 0.97, 0.94, 0.97, 1.04, 1.15, 1.28, 1.36, 1.35] }, { 'latitudinclinacion': 3535, 'coeficientes': [1.31, 1.22, 1.12, 1.02, 0.94, 0.91, 0.94, 1.02, 1.15, 1.29, 1.39, 1.38] }, { 'latitudinclinacion': 3540, 'coeficientes': [1.32, 1.23, 1.11, 0.99, 0.9, 0.87, 0.9, 1, 1.14, 1.3, 1.41, 1.4] }, { 'latitudinclinacion': 3545, 'coeficientes': [1.33, 1.22, 1.09, 0.96, 0.86, 0.82, 0.86, 0.97, 1.13, 1.3, 1.42, 1.41] }, { 'latitudinclinacion': 3550, 'coeficientes': [1.32, 1.21, 1.07, 0.92, 0.81, 0.77, 0.81, 0.93, 1.1, 1.3, 1.43, 1.42] }, { 'latitudinclinacion': 3555, 'coeficientes': [1.31, 1.19, 1.03, 0.87, 0.76, 0.72, 0.76, 0.88, 1.07, 1.28, 1.42, 1.41] }, { 'latitudinclinacion': 3560, 'coeficientes': [1.29, 1.16, 0.99, 0.82, 0.7, 0.66, 0.7, 0.83, 1.03, 1.25, 1.41, 1.4] }, { 'latitudinclinacion': 3565, 'coeficientes': [1.27, 1.12, 0.95, 0.77, 0.64, 0.59, 0.64, 0.77, 0.98, 1.22, 1.38, 1.38] }, { 'latitudinclinacion': 3570, 'coeficientes': [1.23, 1.08, 0.9, 0.71, 0.57, 0.52, 0.57, 0.71, 0.93, 1.18, 1.35, 1.35] }, { 'latitudinclinacion': 3575, 'coeficientes': [1.19, 1.03, 0.84, 0.64, 0.5, 0.45, 0.5, 0.64, 0.87, 1.13, 1.31, 1.31] }, { 'latitudinclinacion': 3580, 'coeficientes': [1.14, 0.98, 0.78, 0.57, 0.43, 0.37, 0.42, 0.57, 0.8, 1.07, 1.26, 1.26] }, { 'latitudinclinacion': 3585, 'coeficientes': [1.09, 0.92, 0.71, 0.5, 0.35, 0.29, 0.34, 0.5, 0.73, 1, 1.2, 1.21] }, { 'latitudinclinacion': 3590, 'coeficientes': [1.02, 0.85, 0.64, 0.42, 0.27, 0.21, 0.26, 0.42, 0.66, 0.93, 1.13, 1.15] }, { 'latitudinclinacion': 360, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 365, 'coeficientes': [1.07, 1.05, 1.04, 1.02, 1.01, 1.01, 1.01, 1.03, 1.05, 1.07, 1.08, 1.08] }, { 'latitudinclinacion': 3610, 'coeficientes': [1.13, 1.1, 1.07, 1.04, 1.02, 1.01, 1.02, 1.05, 1.08, 1.13, 1.15, 1.15] }, { 'latitudinclinacion': 3615, 'coeficientes': [1.18, 1.14, 1.1, 1.05, 1.02, 1.01, 1.02, 1.06, 1.12, 1.18, 1.22, 1.21] }, { 'latitudinclinacion': 3620, 'coeficientes': [1.22, 1.18, 1.12, 1.06, 1.01, 0.99, 1.01, 1.06, 1.14, 1.22, 1.28, 1.27] }, { 'latitudinclinacion': 3625, 'coeficientes': [1.26, 1.2, 1.13, 1.05, 1, 0.98, 1, 1.06, 1.16, 1.26, 1.33, 1.32] }, { 'latitudinclinacion': 3630, 'coeficientes': [1.29, 1.22, 1.13, 1.04, 0.98, 0.95, 0.98, 1.05, 1.16, 1.29, 1.37, 1.36] }, { 'latitudinclinacion': 3635, 'coeficientes': [1.32, 1.23, 1.13, 1.02, 0.95, 0.92, 0.95, 1.03, 1.16, 1.31, 1.4, 1.39] }, { 'latitudinclinacion': 3640, 'coeficientes': [1.33, 1.24, 1.12, 1, 0.91, 0.88, 0.91, 1.01, 1.16, 1.32, 1.43, 1.41] }, { 'latitudinclinacion': 3645, 'coeficientes': [1.34, 1.23, 1.1, 97, 0.87, 0.84, 0.87, 0.98, 1.14, 1.32, 1.44, 1.43] }, { 'latitudinclinacion': 3650, 'coeficientes': [1.34, 1.22, 1.08, 0.93, 0.82, 0.78, 0.82, 0.94, 1.12, 1.31, 1.45, 1.44] }, { 'latitudinclinacion': 3655, 'coeficientes': [1.33, 1.2, 1.05, 0.89, 0.77, 0.73, 0.77, 0.9, 1.08, 1.3, 1.44, 1.43] }, { 'latitudinclinacion': 3660, 'coeficientes': [1.31, 1.17, 1.01, 0.84, 0.71, 0.67, 0.71, 0.84, 1.05, 1.27, 1.43, 1.42] }, { 'latitudinclinacion': 3665, 'coeficientes': [1.29, 1.14, 0.96, 0.78, 0.65, 0.6, 0.65, 0.79, 1, 1.24, 1.41, 1.4] }, { 'latitudinclinacion': 3670, 'coeficientes': [1.25, 1.1, 0.91, 0.72, 0.59, 0.53, 0.58, 0.73, 0.95, 1.2, 1.37, 1.37] }, { 'latitudinclinacion': 3675, 'coeficientes': [1.21, 1.05, 0.85, 0.66, 0.52, 0.46, 0.51, 0.66, 0.89, 1.15, 1.33, 1.33] }, { 'latitudinclinacion': 3680, 'coeficientes': [1.16, 1, 0.79, 0.59, 0.44, 0.39, 0.44, 0.59, 0.82, 1.09, 1.28, 1.29] }, { 'latitudinclinacion': 3685, 'coeficientes': [1.11, 0.94, 0.73, 0.52, 0.37, 0.31, 0.36, 0.51, 0.75, 1.03, 1.23, 1.23] }, { 'latitudinclinacion': 3690, 'coeficientes': [1.05, 0.87, 0.65, 0.44, 0.29, 0.23, 0.28, 0.44, 0.68, 0.96, 1.16, 1.17] }, { 'latitudinclinacion': 370, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 375, 'coeficientes': [1.07, 1.06, 1.04, 1.03, 1.01, 1.01, 1.02, 1.03, 1.05, 1.07, 1.08, 1.08] }, { 'latitudinclinacion': 3710, 'coeficientes': [1.13, 1.1, 1.08, 1.05, 1.02, 1.01, 1.02, 1.05, 1.09, 1.13, 1.16, 1.15] }, { 'latitudinclinacion': 3715, 'coeficientes': [1.18, 1.15, 1.1, 1.06, 1.02, 1.01, 1.02, 1.06, 1.12, 1.19, 1.23, 1.22] }, { 'latitudinclinacion': 3720, 'coeficientes': [1.23, 1.18, 1.12, 1.06, 1.02, 1, 1.02, 1.07, 1.15, 1.23, 1.29, 1.28] }, { 'latitudinclinacion': 3725, 'coeficientes': [1.27, 1.21, 1.14, 1.06, 1, 0.98, 1, 1.07, 1.16, 1.27, 1.34, 1.33] }, { 'latitudinclinacion': 3730, 'coeficientes': [1.3, 1.23, 1.14, 1.05, 0.98, 0.96, 0.98, 1.06, 1.17, 1.3, 1.38, 1.37] }, { 'latitudinclinacion': 3735, 'coeficientes': [1.33, 1.24, 1.14, 1.03, 0.96, 0.93, 0.96, 1.04, 1.17, 1.32, 1.42, 1.41] }, { 'latitudinclinacion': 3740, 'coeficientes': [1.35, 1.25, 1.13, 1.01, 0.92, 0.89, 0.92, 1.02, 1.17, 1.34, 1.44, 1.43] }, { 'latitudinclinacion': 3745, 'coeficientes': [1.35, 1.25, 1.11, 0.98, 0.88, 0.85, 0.88, 0.99, 1.15, 1.34, 1.46, 1.45] }, { 'latitudinclinacion': 3750, 'coeficientes': [1.35, 1.24, 1.09, 0.94, 0.84, 0.8, 0.84, 0.95, 1.13, 1.33, 1.47, 1.46] }, { 'latitudinclinacion': 3755, 'coeficientes': [1.35, 1.22, 1.06, 0.9, 0.78, 0.74, 0.78, 0.91, 1.1, 1.32, 1.47, 1.45] }, { 'latitudinclinacion': 3760, 'coeficientes': [1.33, 1.19, 1.02, 0.85, 0.73, 0.68, 0.73, 0.86, 1.06, 1.3, 1.45, 1.44] }, { 'latitudinclinacion': 3765, 'coeficientes': [1.31, 1.16, 0.98, 0.8, 0.67, 0.62, 0.66, 0.8, 1.02, 1.26, 1.43, 1.42] }, { 'latitudinclinacion': 3770, 'coeficientes': [1.27, 1.12, 0.93, 0.74, 0.6, 0.55, 0.6, 0.74, 0.97, 1.22, 1.4, 1.4] }, { 'latitudinclinacion': 3775, 'coeficientes': [1.23, 1.07, 0.87, 0.67, 0.53, 0.48, 0.53, 0.68, 0.91, 1.17, 1.36, 1.36] }, { 'latitudinclinacion': 3780, 'coeficientes': [1.19, 1.02, 0.81, 0.6, 0.46, 0.4, 0.45, 0.6, 0.84, 1.12, 1.31, 1.31] }, { 'latitudinclinacion': 3785, 'coeficientes': [1.13, 0.96, 0.74, 0.53, 0.38, 0.32, 0.38, 0.53, 0.77, 1.05, 1.26, 1.26] }, { 'latitudinclinacion': 3790, 'coeficientes': [1.07, 0.89, 0.67, 0.46, 0.3, 0.25, 0.3, 0.45, 0.7, 0.98, 1.19, 1.2] }, { 'latitudinclinacion': 380, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 385, 'coeficientes': [1.07, 1.06, 1.04, 1.03, 1.02, 1.01, 1.02, 1.03, 1.05, 1.07, 1.08, 1.08] }, { 'latitudinclinacion': 3810, 'coeficientes': [1.13, 1.11, 1.08, 1.05, 1.02, 1.02, 1.03, 1.05, 1.09, 1.14, 1.16, 1.16] }, { 'latitudinclinacion': 3815, 'coeficientes': [1.19, 1.15, 1.11, 1.06, 1.03, 1.01, 1.03, 1.07, 1.13, 1.19, 1.23, 1.22] }, { 'latitudinclinacion': 3820, 'coeficientes': [1.24, 1.19, 1.13, 1.07, 1.02, 1.01, 1.02, 1.07, 1.15, 1.24, 1.3, 1.29] }, { 'latitudinclinacion': 3825, 'coeficientes': [1.28, 1.22, 1.14, 1.07, 1.01, 0.99, 1.01, 1.08, 1.17, 1.28, 1.35, 1.34] }, { 'latitudinclinacion': 3830, 'coeficientes': [1.31, 1.24, 1.15, 1.06, 0.99, 0.97, 0.99, 1.07, 1.18, 1.31, 1.4, 1.38] }, { 'latitudinclinacion': 3835, 'coeficientes': [1.34, 1.25, 1.15, 1.04, 0.96, 0.94, 0.97, 1.05, 1.19, 1.34, 1.43, 1.42] }, { 'latitudinclinacion': 3840, 'coeficientes': [1.36, 1.26, 1.14, 1.02, 0.93, 0.9, 0.93, 1.03, 1.18, 1.35, 1.46, 1.45] }, { 'latitudinclinacion': 3845, 'coeficientes': [1.37, 1.26, 1.13, 0.99, 0.89, 0.86, 0.89, 1, 1.17, 1.36, 1.48, 1.47] }, { 'latitudinclinacion': 3850, 'coeficientes': [1.37, 1.25, 1.1, 0.96, 0.85, 0.81, 0.85, 0.97, 1.15, 1.35, 1.49, 1.48] }, { 'latitudinclinacion': 3855, 'coeficientes': [1.36, 1.23, 1.07, 0.91, 0.8, 0.75, 0.8, 0.92, 1.12, 1.34, 1.49, 1.48] }, { 'latitudinclinacion': 3860, 'coeficientes': [1.35, 1.21, 1.04, 86, 0.74, 0.69, 0.74, 0.87, 1.08, 1.32, 1.48, 1.47] }, { 'latitudinclinacion': 3865, 'coeficientes': [1.33, 1.18, 0.99, 0.81, 0.68, 0.63, 0.68, 0.82, 1.04, 1.29, 1.46, 1.45] }, { 'latitudinclinacion': 3870, 'coeficientes': [1.29, 1.14, 0.94, 0.75, 0.61, 0.56, 0.61, 0.76, 0.98, 1.25, 1.43, 1.42] }, { 'latitudinclinacion': 3875, 'coeficientes': [1.25, 1.09, 0.89, 0.69, 0.54, 0.49, 0.54, 0.69, 0.93, 1.2, 1.39, 1.39] }, { 'latitudinclinacion': 3880, 'coeficientes': [1.21, 1.04, 0.83, 0.62, 0.47, 0.42, 0.47, 0.62, 0.86, 1.14, 1.34, 1.34] }, { 'latitudinclinacion': 3885, 'coeficientes': [1.15, 0.98, 0.76, 0.55, 0.4, 0.34, 0.39, 0.55, 0.79, 1.08, 1.29, 1.29] }, { 'latitudinclinacion': 3890, 'coeficientes': [1.09, 0.91, 0.69, 0.47, 0.32, 0.26, 0.31, 0.47, 0.72, 1.01, 1.22, 1.23] }, { 'latitudinclinacion': 390, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 395, 'coeficientes': [1.07, 1.06, 1.04, 1.03, 1.02, 1.01, 1.02, 1.03, 1.05, 1.07, 1.09, 1.08] }, { 'latitudinclinacion': 3910, 'coeficientes': [1.14, 1.11, 1.08, 1.05, 1.03, 1.02, 1.03, 1.06, 1.1, 1.14, 1.17, 1.16] }, { 'latitudinclinacion': 3915, 'coeficientes': [1.19, 1.16, 1.11, 1.07, 1.03, 1.02, 1.03, 1.07, 1.13, 1.2, 1.24, 1.23] }, { 'latitudinclinacion': 3920, 'coeficientes': [1.25, 1.2, 1.14, 1.07, 1.03, 1.01, 1.03, 1.08, 1.16, 1.25, 1.31, 1.29] }, { 'latitudinclinacion': 3925, 'coeficientes': [1.29, 1.23, 1.15, 1.07, 1.02, 1, 1.02, 1.08, 1.18, 1.29, 1.36, 1.35] }, { 'latitudinclinacion': 3930, 'coeficientes': [1.33, 1.25, 1.16, 1.07, 1, 0.97, 1, 1.08, 1.19, 1.33, 1.41, 1.4] }, { 'latitudinclinacion': 3935, 'coeficientes': [1.35, 1.27, 1.16, 1.05, 0.97, 0.94, 0.98, 1.06, 1.2, 1.35, 1.45, 1.43] }, { 'latitudinclinacion': 3940, 'coeficientes': [1.37, 1.27, 1.15, 1.03, 0.94, 0.91, 0.94, 1.04, 1.19, 1.37, 1.48, 1.46] }, { 'latitudinclinacion': 3945, 'coeficientes': [1.38, 1.27, 1.14, 1, 0.9, 0.87, 0.9, 1.01, 1.18, 1.37, 1.5, 1.48] }, { 'latitudinclinacion': 3950, 'coeficientes': [1.39, 1.26, 1.12, 0.97, 0.86, 0.82, 0.86, 0.98, 1.16, 1.37, 1.51, 1.5] }, { 'latitudinclinacion': 3955, 'coeficientes': [1.38, 1.25, 1.09, 0.93, 0.81, 0.77, 0.81, 0.94, 1.13, 1.36, 1.51, 1.5] }, { 'latitudinclinacion': 3960, 'coeficientes': [1.37, 1.22, 1.05, 0.88, 0.75, 0.71, 0.75, 0.89, 1.1, 1.34, 1.51, 1.49] }, { 'latitudinclinacion': 3965, 'coeficientes': [1.35, 1.19, 1.01, 0.83, 0.69, 0.65, 0.69, 0.83, 1.05, 1.31, 1.49, 1.47] }, { 'latitudinclinacion': 3970, 'coeficientes': [1.32, 1.15, 0.96, 0.77, 0.63, 0.58, 0.63, 0.77, 1, 1.27, 1.46, 1.45] }, { 'latitudinclinacion': 3975, 'coeficientes': [1.28, 1.11, 0.91, 0.7, 0.56, 0.51, 0.56, 0.71, 0.95, 1.23, 1.42, 1.41] }, { 'latitudinclinacion': 3980, 'coeficientes': [1.23, 1.06, 0.84, 0.64, 0.49, 0.43, 0.48, 0.64, 0.88, 1.17, 1.37, 1.37] }, { 'latitudinclinacion': 3985, 'coeficientes': [1.18, 1, 0.78, 0.56, 0.41, 0.35, 0.41, 0.56, 0.81, 1.11, 1.32, 1.32] }, { 'latitudinclinacion': 3990, 'coeficientes': [1.12, 0.93, 0.71, 0.49, 0.33, 0.28, 0.33, 0.49, 0.74, 1.04, 1.25, 1.26] }, { 'latitudinclinacion': 400, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 405, 'coeficientes': [1.07, 1.06, 1.05, 1.03, 1.02, 1.01, 1.02, 1.03, 1.05, 1.08, 1.09, 1.09] }, { 'latitudinclinacion': 4010, 'coeficientes': [1.14, 1.11, 1.08, 1.05, 1.03, 1.02, 1.03, 1.06, 1.1, 1.14, 1.17, 1.16] }, { 'latitudinclinacion': 4015, 'coeficientes': [1.2, 1.16, 1.12, 1.07, 1.03, 1.02, 1.04, 1.08, 1.14, 1.21, 1.25, 1.24] }, { 'latitudinclinacion': 4020, 'coeficientes': [1.25, 1.2, 1.14, 1.08, 1.03, 1.02, 1.03, 1.09, 1.17, 1.26, 1.32, 1.3] }, { 'latitudinclinacion': 4025, 'coeficientes': [1.3, 1.23, 1.16, 1.08, 1.02, 1, 1.02, 1.09, 1.19, 1.3, 1.38, 1.36] }, { 'latitudinclinacion': 4030, 'coeficientes': [1.34, 1.26, 1.17, 1.07, 1.01, 0.98, 1.01, 1.09, 1.2, 1.34, 1.43, 1.41] }, { 'latitudinclinacion': 4035, 'coeficientes': [1.37, 1.28, 1.17, 1.06, 0.98, 0.95, 0.98, 1.07, 1.21, 1.37, 1.47, 1.45] }, { 'latitudinclinacion': 4040, 'coeficientes': [1.39, 1.29, 1.16, 1.04, 0.95, 0.92, 0.95, 1.05, 1.21, 1.39, 1.5, 1.48] }, { 'latitudinclinacion': 4045, 'coeficientes': [1.4, 1.29, 1.15, 1.01, 0.91, 0.88, 0.92, 1.03, 1.2, 1.39, 1.52, 1.5] }, { 'latitudinclinacion': 4050, 'coeficientes': [1.41, 1.28, 1.13, 0.98, 0.87, 0.83, 0.87, 0.99, 1.18, 1.39, 1.54, 1.52] }, { 'latitudinclinacion': 4055, 'coeficientes': [1.4, 1.27, 1.1, 0.94, 0.82, 0.78, 0.82, 0.95, 1.15, 1.38, 1.54, 1.52] }, { 'latitudinclinacion': 4060, 'coeficientes': [1.39, 1.24, 1.07, 0.89, 0.77, 0.72, 0.77, 0.9, 1.12, 1.36, 1.53, 1.51] }, { 'latitudinclinacion': 4065, 'coeficientes': [1.37, 1.21, 1.03, 0.84, 0.71, 0.66, 0.71, 0.85, 1.07, 1.34, 1.51, 1.5] }, { 'latitudinclinacion': 4070, 'coeficientes': [1.34, 1.17, 0.98, 0.78, 0.64, 0.59, 0.64, 0.79, 1.02, 1.3, 1.49, 1.47] }, { 'latitudinclinacion': 4075, 'coeficientes': [1.3, 1.13, 0.92, 0.72, 0.57, 0.52, 0.57, 0.73, 0.97, 1.25, 1.45, 1.44] }, { 'latitudinclinacion': 4080, 'coeficientes': [1.25, 1.08, 0.86, 0.65, 0.5, 0.45, 0.5, 0.66, 0.9, 1.2, 1.41, 1.4] }, { 'latitudinclinacion': 4085, 'coeficientes': [1.2, 1.02, 0.8, 0.58, 0.43, 0.37, 0.42, 0.58, 0.84, 1.14, 1.35, 1.35] }, { 'latitudinclinacion': 4090, 'coeficientes': [1.14, 0.95, 0.73, 0.5, 0.35, 0.29, 0.34, 0.5, 0.76, 1.07, 1.29, 1.29] }, { 'latitudinclinacion': 410, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 415, 'coeficientes': [1.07, 1.06, 1.05, 1.03, 1.02, 1.02, 1.02, 1.03, 1.05, 1.08, 1.09, 1.09] }, { 'latitudinclinacion': 4110, 'coeficientes': [1.14, 1.12, 1.09, 1.06, 1.03, 1.02, 1.03, 1.06, 1.1, 1.15, 1.18, 1.17] }, { 'latitudinclinacion': 4115, 'coeficientes': [1.21, 1.17, 1.12, 1.07, 1.04, 1.03, 1.04, 1.08, 1.14, 1.21, 1.26, 1.24] }, { 'latitudinclinacion': 4120, 'coeficientes': [1.26, 1.21, 1.15, 1.08, 1.04, 1.02, 1.04, 1.09, 1.17, 1.27, 1.33, 1.31] }, { 'latitudinclinacion': 4125, 'coeficientes': [1.31, 1.24, 1.17, 1.09, 1.03, 1.01, 1.03, 1.1, 1.2, 1.32, 1.39, 1.37] }, { 'latitudinclinacion': 4130, 'coeficientes': [1.35, 1.27, 1.18, 1.08, 1.01, 0.99, 1.02, 1.09, 1.21, 1.35, 1.44, 1.42] }, { 'latitudinclinacion': 4135, 'coeficientes': [1.38, 1.29, 1.18, 1.07, 0.99, 0.96, 0.99, 1.08, 1.22, 1.38, 1.49, 1.47] }, { 'latitudinclinacion': 4140, 'coeficientes': [1.4, 1.3, 1.18, 1.05, 0.96, 0.93, 0.96, 1.06, 1.22, 1.4, 1.52, 1.5] }, { 'latitudinclinacion': 4145, 'coeficientes': [1.42, 1.3, 1.16, 1.03, 0.93, 0.89, 0.93, 1.04, 1.21, 1.41, 1.55, 1.52] }, { 'latitudinclinacion': 4150, 'coeficientes': [1.42, 1.3, 1.14, 0.99, 0.88, 0.84, 0.88, 1.01, 1.19, 1.41, 1.56, 1.54] }, { 'latitudinclinacion': 4155, 'coeficientes': [1.42, 1.28, 1.12, 0.95, 0.83, 0.79, 0.84, 0.97, 1.17, 1.41, 1.57, 1.54] }, { 'latitudinclinacion': 4160, 'coeficientes': [1.41, 1.26, 1.08, 0.91, 0.78, 0.73, 0.78, 0.92, 1.14, 1.39, 1.56, 1.54] }, { 'latitudinclinacion': 4165, 'coeficientes': [1.39, 1.23, 1.04, 0.85, 0.72, 0.67, 0.72, 0.87, 1.09, 1.36, 1.54, 1.53] }, { 'latitudinclinacion': 4170, 'coeficientes': [1.36, 1.19, 0.99, 0.8, 0.66, 0.61, 0.66, 0.81, 1.04, 1.32, 1.52, 1.5] }, { 'latitudinclinacion': 4175, 'coeficientes': [1.32, 1.15, 0.94, 0.73, 0.59, 0.54, 0.59, 0.74, 0.99, 1.28, 1.48, 1.47] }, { 'latitudinclinacion': 4180, 'coeficientes': [1.28, 1.1, 0.88, 0.67, 0.52, 0.46, 0.52, 0.67, 0.93, 1.23, 1.44, 1.43] }, { 'latitudinclinacion': 4185, 'coeficientes': [1.23, 1.04, 0.82, 0.6, 0.44, 0.39, 0.44, 0.6, 0.86, 1.16, 1.38, 1.38] }, { 'latitudinclinacion': 4190, 'coeficientes': [1.17, 0.98, 0.74, 0.52, 0.36, 0.31, 0.36, 0.52, 0.78, 1.09, 1.32, 1.32] }, { 'latitudinclinacion': 420, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 425, 'coeficientes': [1.08, 1.06, 1.05, 1.03, 1.02, 1.02, 1.02, 1.04, 1.06, 1.08, 1.09, 1.09] }, { 'latitudinclinacion': 4210, 'coeficientes': [1.15, 1.12, 1.09, 1.06, 1.04, 1.03, 1.04, 1.06, 1.11, 1.15, 1.18, 1.17] }, { 'latitudinclinacion': 4215, 'coeficientes': [1.21, 1.17, 1.13, 1.08, 1.04, 1.03, 1.04, 1.09, 1.15, 1.22, 1.26, 1.25] }, { 'latitudinclinacion': 4220, 'coeficientes': [1.27, 1.21, 1.15, 1.09, 1.04, 1.03, 1.05, 1.1, 1.18, 1.28, 1.34, 1.32] }, { 'latitudinclinacion': 4225, 'coeficientes': [1.32, 1.25, 1.17, 1.09, 1.04, 1.01, 1.04, 1.1, 1.21, 1.33, 1.4, 1.38] }, { 'latitudinclinacion': 4230, 'coeficientes': [1.36, 1.28, 1.19, 1.09, 1.02, 1, 1.02, 1.1, 1.23, 1.37, 1.46, 1.44] }, { 'latitudinclinacion': 4235, 'coeficientes': [1.39, 1.3, 1.19, 1.08, 1, 0.97, 1, 1.09, 1.23, 1.4, 1.51, 1.48] }, { 'latitudinclinacion': 4240, 'coeficientes': [1.42, 1.31, 1.19, 1.06, 0.97, 0.94, 0.97, 1.08, 1.24, 1.42, 1.54, 1.52] }, { 'latitudinclinacion': 4245, 'coeficientes': [1.43, 1.32, 1.18, 1.04, 0.94, 0.9, 0.94, 1.05, 1.23, 1.43, 1.57, 1.54] }, { 'latitudinclinacion': 4250, 'coeficientes': [1.44, 1.31, 1.16, 1, 0.89, 0.86, 0.9, 1.02, 1.21, 1.44, 1.59, 1.56] }, { 'latitudinclinacion': 4255, 'coeficientes': [1.44, 1.3, 1.13, 0.97, 0.85, 0.8, 0.85, 0.98, 1.19, 1.43, 1.59, 1.57] }, { 'latitudinclinacion': 4260, 'coeficientes': [1.43, 1.28, 1.1, 0.92, 0.79, 0.75, 0.8, 0.93, 1.15, 1.41, 1.59, 1.57] }, { 'latitudinclinacion': 4265, 'coeficientes': [1.41, 1.25, 1.06, 0.87, 0.74, 0.69, 0.74, 0.88, 1.11, 1.39, 1.57, 1.55] }, { 'latitudinclinacion': 4270, 'coeficientes': [1.38, 1.21, 1.01, 0.81, 0.67, 0.62, 0.67, 0.82, 1.07, 1.35, 1.55, 1.53] }, { 'latitudinclinacion': 4275, 'coeficientes': [1.35, 1.17, 0.96, 0.75, 0.6, 0.55, 0.6, 0.76, 1.01, 1.31, 1.52, 1.5] }, { 'latitudinclinacion': 4280, 'coeficientes': [1.3, 1.12, 0.9, 0.68, 0.53, 0.48, 0.53, 0.69, 0.95, 1.25, 1.47, 1.46] }, { 'latitudinclinacion': 4285, 'coeficientes': [1.25, 1.06, 0.83, 0.61, 0.46, 0.4, 0.46, 0.62, 0.88, 1.19, 1.42, 1.41] }, { 'latitudinclinacion': 4290, 'coeficientes': [1.19, 1, 0.76, 0.54, 0.38, 0.32, 0.38, 0.54, 0.81, 1.12, 1.36, 1.35] }, { 'latitudinclinacion': 430, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 435, 'coeficientes': [1.08, 1.07, 1.05, 1.03, 1.02, 1.02, 1.02, 1.04, 1.06, 1.08, 1.1, 1.09] }, { 'latitudinclinacion': 4310, 'coeficientes': [1.15, 1.12, 1.09, 1.06, 1.04, 1.03, 1.04, 1.07, 1.11, 1.16, 1.19, 1.18] }, { 'latitudinclinacion': 4315, 'coeficientes': [1.22, 1.18, 1.13, 1.08, 1.05, 1.03, 1.05, 1.09, 1.15, 1.23, 1.27, 1.26] }, { 'latitudinclinacion': 4320, 'coeficientes': [1.28, 1.22, 1.16, 1.09, 1.05, 1.03, 1.05, 1.1, 1.19, 1.29, 1.35, 1.33] }, { 'latitudinclinacion': 4325, 'coeficientes': [1.33, 1.26, 1.18, 1.1, 1.04, 1.02, 1.04, 1.11, 1.22, 1.34, 1.42, 1.4] }, { 'latitudinclinacion': 4330, 'coeficientes': [1.37, 1.29, 1.2, 1.1, 1.03, 1, 1.03, 1.11, 1.24, 1.38, 1.48, 1.45] }, { 'latitudinclinacion': 4335, 'coeficientes': [1.41, 1.31, 1.2, 1.09, 1.01, 0.98, 1.01, 1.1, 1.25, 1.42, 1.52, 1.5] }, { 'latitudinclinacion': 4340, 'coeficientes': [1.43, 1.33, 1.2, 1.07, 0.98, 0.95, 0.98, 1.09, 1.25, 1.44, 1.56, 1.54] }, { 'latitudinclinacion': 4345, 'coeficientes': [1.45, 1.33, 1.19, 1.05, 0.95, 0.91, 0.95, 1.06, 1.24, 1.45, 1.59, 1.57] }, { 'latitudinclinacion': 4350, 'coeficientes': [1.46, 1.33, 1.17, 1.02, 0.91, 0.87, 0.91, 1.03, 1.23, 1.46, 1.61, 1.58] }, { 'latitudinclinacion': 4355, 'coeficientes': [1.46, 1.32, 1.15, 0.98, 0.86, 0.82, 0.86, 1, 1.21, 1.45, 1.62, 1.59] }, { 'latitudinclinacion': 4360, 'coeficientes': [1.45, 1.3, 1.12, 0.94, 0.81, 0.76, 0.81, 0.95, 1.17, 1.44, 1.62, 1.59] }, { 'latitudinclinacion': 4365, 'coeficientes': [1.43, 1.27, 1.08, 0.89, 0.75, 0.7, 0.75, 0.9, 1.13, 1.41, 1.61, 1.58] }, { 'latitudinclinacion': 4370, 'coeficientes': [1.41, 1.23, 1.03, 0.83, 0.69, 0.64, 0.69, 0.84, 1.09, 1.38, 1.58, 1.56] }, { 'latitudinclinacion': 4375, 'coeficientes': [1.37, 1.19, 0.98, 0.77, 0.62, 0.57, 0.62, 0.78, 1.03, 1.34, 1.55, 1.53] }, { 'latitudinclinacion': 4380, 'coeficientes': [1.33, 1.14, 0.92, 0.7, 0.55, 0.49, 0.55, 0.71, 0.97, 1.28, 1.51, 1.49] }, { 'latitudinclinacion': 4385, 'coeficientes': [1.28, 1.08, 0.85, 0.63, 0.47, 0.42, 0.47, 0.64, 0.9, 1.22, 1.45, 1.44] }, { 'latitudinclinacion': 4390, 'coeficientes': [1.22, 1.02, 0.78, 0.56, 0.4, 0.34, 0.39, 0.56, 0.83, 1.16, 1.39, 1.38] }, { 'latitudinclinacion': 440, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 445, 'coeficientes': [1.08, 1.07, 1.05, 1.04, 1.02, 1.02, 1.02, 1.04, 1.06, 1.09, 1.1, 1.1] }, { 'latitudinclinacion': 4410, 'coeficientes': [1.16, 1.13, 1.1, 1.06, 1.04, 1.03, 1.04, 1.07, 1.11, 1.16, 1.19, 1.18] }, { 'latitudinclinacion': 4415, 'coeficientes': [1.22, 1.18, 1.13, 1.09, 1.05, 1.04, 1.05, 1.09, 1.16, 1.23, 1.28, 1.27] }, { 'latitudinclinacion': 4420, 'coeficientes': [1.28, 1.23, 1.17, 1.1, 1.05, 1.04, 1.06, 1.11, 1.2, 1.3, 1.36, 1.34] }, { 'latitudinclinacion': 4425, 'coeficientes': [1.34, 1.27, 1.19, 1.11, 1.05, 1.03, 1.05, 1.12, 1.23, 1.35, 1.43, 1.41] }, { 'latitudinclinacion': 4430, 'coeficientes': [1.38, 1.3, 1.2, 1.11, 1.04, 1.01, 1.04, 1.12, 1.25, 1.4, 1.49, 1.47] }, { 'latitudinclinacion': 4435, 'coeficientes': [1.42, 1.32, 1.21, 1.1, 1.02, 0.99, 1.02, 1.11, 1.26, 1.43, 1.54, 1.52] }, { 'latitudinclinacion': 4440, 'coeficientes': [1.45, 1.34, 1.21, 1.08, 0.99, 0.96, 1, 1.1, 1.26, 1.46, 1.59, 1.56] }, { 'latitudinclinacion': 4445, 'coeficientes': [1.47, 1.35, 1.2, 1.06, 0.96, 0.92, 0.96, 1.08, 1.26, 1.48, 1.62, 1.59] }, { 'latitudinclinacion': 4450, 'coeficientes': [1.48, 1.34, 1.19, 1.03, 0.92, 0.88, 0.92, 1.05, 1.25, 1.48, 1.64, 1.61] }, { 'latitudinclinacion': 4455, 'coeficientes': [1.48, 1.33, 1.16, 0.99, 0.87, 0.83, 0.88, 1.01, 1.22, 1.48, 1.65, 1.62] }, { 'latitudinclinacion': 4460, 'coeficientes': [1.47, 1.32, 1.13, 0.95, 0.82, 0.78, 0.82, 0.97, 1.19, 1.47, 1.65, 1.62] }, { 'latitudinclinacion': 4465, 'coeficientes': [1.46, 1.29, 1.09, 0.9, 0.76, 0.72, 0.77, 0.92, 1.16, 1.44, 1.64, 1.61] }, { 'latitudinclinacion': 4470, 'coeficientes': [1.43, 1.26, 1.05, 0.85, 0.7, 0.65, 0.7, 0.86, 1.11, 1.41, 1.62, 1.59] }, { 'latitudinclinacion': 4475, 'coeficientes': [1.4, 1.21, 1, 0.78, 0.64, 0.58, 0.64, 0.8, 1.06, 1.37, 1.59, 1.56] }, { 'latitudinclinacion': 4480, 'coeficientes': [1.36, 1.16, 0.94, 0.72, 0.56, 0.51, 0.56, 0.73, 0.99, 1.32, 1.54, 1.52] }, { 'latitudinclinacion': 4485, 'coeficientes': [1.31, 1.11, 0.87, 0.65, 0.49, 0.43, 0.49, 0.66, 0.93, 1.26, 1.49, 1.48] }, { 'latitudinclinacion': 4490, 'coeficientes': [1.25, 1.04, 0.8, 0.57, 0.41, 0.35, 0.41, 0.58, 0.85, 1.19, 1.43, 1.42] }, { 'latitudinclinacion': 450, 'coeficientes': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] }, { 'latitudinclinacion': 455, 'coeficientes': [1.08, 1.07, 1.05, 1.04, 1.03, 1.02, 1.03, 1.04, 1.06, 1.09, 1.1, 1.1] }, { 'latitudinclinacion': 4510, 'coeficientes': [1.16, 1.13, 1.1, 1.07, 1.04, 1.04, 1.05, 1.07, 1.12, 1.17, 1.2, 1.19] }, { 'latitudinclinacion': 4515, 'coeficientes': [1.23, 1.19, 1.14, 1.09, 1.05, 1.04, 1.06, 1.1, 1.17, 1.24, 1.29, 1.27] }, { 'latitudinclinacion': 4520, 'coeficientes': [1.29, 1.24, 1.17, 1.11, 1.06, 1.04, 1.06, 1.12, 1.21, 1.31, 1.37, 1.35] }, { 'latitudinclinacion': 4525, 'coeficientes': [1.35, 1.28, 1.2, 1.11, 1.06, 1.03, 1.06, 1.13, 1.24, 1.36, 1.45, 1.42] }, { 'latitudinclinacion': 4530, 'coeficientes': [1.4, 1.31, 1.21, 1.12, 1.04, 1.02, 1.05, 1.13, 1.26, 1.41, 1.51, 1.48] }, { 'latitudinclinacion': 4535, 'coeficientes': [1.43, 1.34, 1.22, 1.11, 1.03, 1, 1.03, 1.12, 1.27, 1.45, 1.56, 1.53] }, { 'latitudinclinacion': 4540, 'coeficientes': [1.46, 1.35, 1.22, 1.09, 1, 0.97, 1.01, 1.11, 1.28, 1.48, 1.61, 1.58] }, { 'latitudinclinacion': 4545, 'coeficientes': [1.49, 1.36, 1.22, 1.07, 0.97, 0.93, 0.97, 1.09, 1.28, 1.5, 1.64, 1.61] }, { 'latitudinclinacion': 4550, 'coeficientes': [1.5, 1.36, 1.2, 1.04, 0.93, 0.89, 0.94, 1.06, 1.26, 1.51, 1.67, 1.63] }, { 'latitudinclinacion': 4555, 'coeficientes': [1.5, 1.35, 1.18, 1.01, 0.89, 0.84, 0.89, 1.03, 1.24, 1.5, 1.68, 1.65] }, { 'latitudinclinacion': 4560, 'coeficientes': [1.5, 1.34, 1.15, 0.97, 0.84, 0.79, 0.84, 0.98, 1.21, 1.49, 1.68, 1.65] }, { 'latitudinclinacion': 4565, 'coeficientes': [1.48, 1.31, 1.11, 0.92, 0.78, 0.73, 0.78, 0.93, 1.18, 1.47, 1.67, 1.64] }, { 'latitudinclinacion': 4570, 'coeficientes': [1.46, 1.28, 1.07, 0.86, 0.72, 0.67, 0.72, 0.88, 1.13, 1.44, 1.65, 1.62] }, { 'latitudinclinacion': 4575, 'coeficientes': [1.43, 1.24, 1.02, 0.8, 0.65, 0.6, 0.65, 0.82, 1.08, 1.4, 1.62, 1.6] }, { 'latitudinclinacion': 4580, 'coeficientes': [1.38, 1.19, 0.96, 0.74, 0.58, 0.53, 0.58, 0.75, 1.02, 1.35, 1.58, 1.56] }, { 'latitudinclinacion': 4585, 'coeficientes': [1.33, 1.13, 0.89, 0.66, 0.51, 0.45, 0.51, 0.67, 0.95, 1.29, 1.53, 1.51] }, { 'latitudinclinacion': 4590, 'coeficientes': [1.28, 1.07, 0.82, 0.59, 0.43, 0.37, 0.43, 0.6, 0.88, 1.22, 1.47, 1.45] },
      ],



    },
    mounted: function () {
      console.log("dibujando...");
      this.drawGraph();

    },

    methods: {
      calcularAutonomia: function () {
        this.edad = parseFloat(this.edad);
      },
      drawGraph: function () {
        const ctx = document.getElementById('myChart');
        var labels = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Nov', 'Dic'];
        new Chart(ctx, {
          type: 'bar',
          data: {
            labels,
            datasets: [{
              label: 'Consumo',
              data: this.energiaConsumida,
              backgroundColor: "red"
            }, {
              label: 'Fotovoltaico',
              data: this.energiaGanada,
              backgroundColor: "green"
            }, {
              label: 'Bateria Ah Disponible',
              data: this.consumoAh,
              backgroundColor: "blue"
            }, {
              label: 'dias autonomia sin sol',
              data: this.diasSinSol,
              backgroundColor: "#f7f2bb",
              yAxisID: "y2"
            }
            ]
          },
          options: {
            scales: {
              y: {
                beginAtZero: true,
                scaleLabel: {
                  display: true,
                  labelString: 'Energia Ah'
                }
              },
              y2: {
                min: 0,
                max: 30,
                position: 'right',
                grid: {
                  drawOnChartArea: false, // only want the grid lines for one axis to show up
                },
                             scaleLabel: {
                  display: true,
                  labelString: 'dias'
                }

              },
              x: {
                stacked: false,
              }
            }
          }
        });
      }
    },
    computed: {
      a: function () {
        return parseFloat(this.inclinacion);
      },
      coeficienteradiacion: function () {
        var el = this.radiacion.find((el) => {
          if (el.ciudad == this.zona) {
            //console.log(el.ciudad)
            return el;
          }
        }
        );
        return el.radiacion;
      },
      coeficientelatitudinclinacion: function () {
        var el = this.latitudinclinacion.find((el) => {
          if (el.latitudinclinacion == ("" + this.latitud + this.inclinacion)) {
            //console.log(el.latitudinclinacion)
            return el;
          }
        }
        );
        return el.coeficientes;

      },


      valoresRadiacion: function () {
        var valores = [];
        for (var i = 0; i < this.coeficienteradiacion.length; i++) {
          valores.push(parseFloat((this.coeficienteradiacion[i] * this.coeficientelatitudinclinacion[i]).toFixed(3)));
        }
        return valores;
      },

      energiaGanada: function () {
        var valores = [];
        for (var i = 0; i < this.valoresRadiacion.length; i++) {
          valores.push(parseFloat((30.4375 * this.valoresRadiacion[i] * (100 - this.edad) / 100 * this.potencia * this.orientacion / this.umpp).toFixed(3)));
        }
        return valores;
      },
      energiaConsumida: function () {
        var valores = [];
        for (var i = 1; i <= 12; i++) {
          valores.push(parseFloat((
            30.4375 * ((24 + this.histeresis * 2 - 24 / 180 * Math.acos((-Math.tan(this.latitud * Math.PI / 180)) * Math.tan(Math.sin((360 / 365.25) * (((i) * (30.4375)) - 80) * Math.PI / 180) * 23.45 * Math.PI / 180)) / Math.PI * 180) * this.consumo / this.voltaje * this.ciclotrabajo / 100 + 24 * this.consumofijo / this.voltaje)
          ).toFixed(3)));
        }
        return valores;
      },
      consumoAh: function () {
        var valores = [];
        var capacidadAnterior = this.capacidad;
        valores.push(capacidadAnterior);
        for (var i = 0; i < 12; i++) {
          capacidadAnterior = capacidadAnterior + this.energiaGanada[i] / this.eficacia - this.energiaConsumida[i];
          //console.log(capacidadAnterior)
          if (capacidadAnterior > this.capacidad * this.capacidadmaxima / 100)
            capacidadAnterior = this.capacidad * this.capacidadmaxima / 100;
          else if (capacidadAnterior < 0)
            capacidadAnterior = 0;


          valores.push(capacidadAnterior)
        }
        return valores;
      },
      diasSinSol: function () {
        var valores = [];
        for (var i = 0; i < 12; i++) {
          valores.push(parseInt(this.consumoAh[i] / (this.energiaConsumida[i] / 30.4375)));
        }
        return valores;
      },
      valorPrueba: function () {
        return parseFloat((
          24 * this.consumofijo / this.ciclotrabajo))
      }
    }
  });
</script>